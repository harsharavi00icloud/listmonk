version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - identifier: StartupRequest
          length: 102
          payload: AAAAZgADAABkYXRhYmFzZQBsaXN0bW9uawBjbGllbnRfZW5jb2RpbmcAVVRGOABkYXRlc3R5bGUASVNPLCBNRFkAZXh0cmFfZmxvYXRfZGlnaXRzADIAdXNlcgBsaXN0bW9uawAA
          startup_message:
            protocolversion: 196608
            parameters:
                client_encoding: UTF8
                database: listmonk
                datestyle: ISO, MDY
                extra_float_digits: "2"
                user: listmonk
          auth_type: 0
    postgresresponses:
        - header: [R]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 13
                - 91
                - 250
                - 86
          msg_type: 82
          auth_type: 5
    reqtimestampmock: 2023-11-03T03:02:44.366192391Z
    restimestampmock: 2023-11-03T03:02:44.368863447Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [p]
          identifier: ClientRequest
          length: 102
          password_message:
            password: md5264ab4128d2bdfa11762df6b2e126dc2
          msg_type: 112
          auth_type: 0
    postgresresponses:
        - header: [R, S, S, S, S, S, S, S, S, S, S, S, K, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          backend_key_data:
            process_id: 34
            secret_key: 918427917
          parameter_status:
            - name: application_name
              value: ""
            - name: client_encoding
              value: UTF8
            - name: DateStyle
              value: ISO, MDY
            - name: integer_datetimes
              value: "on"
            - name: IntervalStyle
              value: postgres
            - name: is_superuser
              value: "on"
            - name: server_encoding
              value: UTF8
            - name: server_version
              value: 13.12 (Debian 13.12-1.pgdg120+1)
            - name: session_authorization
              value: listmonk
            - name: standard_conforming_strings
              value: "on"
            - name: TimeZone
              value: Etc/UTC
            - name: TimeZone
              value: Etc/UTC
            - name: TimeZone
              value: Etc/UTC
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.380501143Z
    restimestampmock: 2023-11-03T03:02:44.380562847Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: ;
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [I, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.381194092Z
    restimestampmock: 2023-11-03T03:02:44.381221132Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: SELECT id FROM templates LIMIT 1
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [T, D, C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ["2"]}, {_: [], row_values: ["2"]}, {_: [], row_values: ["2"]}]
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16524, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.404047223Z
    restimestampmock: 2023-11-03T03:02:44.404074304Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          payload: UQAAAGEKCQlTRUxFQ1QgQ09BTEVTQ0UoCgkJCShTRUxFQ1QgdmFsdWUtPj4tMSBGUk9NIHNldHRpbmdzIFdIRVJFIGtleT0nbWlncmF0aW9ucycpLAoJCSd2MC4wLjAnKQA=
          query:
            string: ' SELECT COALESCE( (SELECT value->>-1 FROM settings WHERE key=''migrations''), ''v0.0.0'')'
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [T, D, C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: [v2.6.0]}, {_: [], row_values: [v2.6.0]}, {_: [], row_values: [v2.6.0]}]
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 111, 97, 108, 101, 115, 99, 101], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.405021693Z
    restimestampmock: 2023-11-03T03:02:44.405040192Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: SELECT JSON_OBJECT_AGG(key, value) AS settings FROM ( SELECT * FROM settings ORDER BY key ) t;
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [T, D, C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['{ "app.batch_size" : 1000, "app.check_updates" : true, "app.concurrency" : 10, "appearance.admin.custom_css" : "", "appearance.admin.custom_js" : "", "appearance.public.custom_css" : "", "appearance.public.custom_js" : "", "app.enable_public_archive" : true, "app.enable_public_archive_rss_content" : true, "app.enable_public_subscription_page" : true, "app.favicon_url" : "", "app.from_email" : "listmonk <noreply@listmonk.yoursite.com>", "app.lang" : "en", "app.logo_url" : "", "app.max_send_errors" : 1000, "app.message_rate" : 10, "app.message_sliding_window" : false, "app.message_sliding_window_duration" : "1h", "app.message_sliding_window_rate" : 10000, "app.notify_emails" : ["admin1@mysite.com", "admin2@mysite.com"], "app.root_url" : "http://localhost:9000", "app.send_optin_confirmation" : true, "app.site_name" : "Mailing list", "bounce.actions" : {"hard": {"count": 2, "action": "blocklist"}, "soft": {"count": 2, "action": "none"}, "complaint": {"count": 2, "action": "delete"}}, "bounce.enabled" : false, "bounce.mailboxes" : [{"host": "pop.yoursite.com", "port": 995, "type": "pop", "enabled": false, "password": "password", "username": "username", "return_path": "bounce@listmonk.yoursite.com", "tls_enabled": true, "auth_protocol": "userpass", "scan_interval": "15m", "tls_skip_verify": false}], "bounce.postmark" : {"enabled": false, "password": "", "username": ""}, "bounce.sendgrid_enabled" : false, "bounce.sendgrid_key" : "", "bounce.ses_enabled" : false, "bounce.webhooks_enabled" : false, "messengers" : [], "migrations" : ["v2.6.0"], "privacy.allow_blocklist" : true, "privacy.allow_export" : true, "privacy.allow_preferences" : true, "privacy.allow_wipe" : true, "privacy.domain_blocklist" : [], "privacy.exportable" : ["profile", "subscriptions", "campaign_views", "link_clicks"], "privacy.individual_tracking" : false, "privacy.record_optin_ip" : false, "privacy.unsubscribe_header" : true, "security.captcha_key" : "", "security.captcha_secret" : "", "security.enable_captcha" : false, "smtp" : [{"host": "smtp.yoursite.com", "port": 25, "enabled": true, "password": "password", "tls_type": "STARTTLS", "username": "username", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "cram", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}, {"host": "smtp.gmail.com", "port": 465, "enabled": false, "password": "password", "tls_type": "TLS", "username": "username@gmail.com", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "login", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}], "upload.extensions" : ["jpg", "jpeg", "png", "gif", "svg", "*"], "upload.filesystem.upload_path" : "uploads", "upload.filesystem.upload_uri" : "/uploads", "upload.max_file_size" : 5000, "upload.provider" : "filesystem", "upload.s3.aws_access_key_id" : "", "upload.s3.aws_default_region" : "ap-south-1", "upload.s3.aws_secret_access_key" : "", "upload.s3.bucket" : "", "upload.s3.bucket_domain" : "", "upload.s3.bucket_path" : "/", "upload.s3.bucket_type" : "public", "upload.s3.expiry" : "167h", "upload.s3.public_url" : "", "upload.s3.url" : "https://ap-south-1.s3.amazonaws.com" }']}, {_: [], row_values: ['{ "app.batch_size" : 1000, "app.check_updates" : true, "app.concurrency" : 10, "appearance.admin.custom_css" : "", "appearance.admin.custom_js" : "", "appearance.public.custom_css" : "", "appearance.public.custom_js" : "", "app.enable_public_archive" : true, "app.enable_public_archive_rss_content" : true, "app.enable_public_subscription_page" : true, "app.favicon_url" : "", "app.from_email" : "listmonk <noreply@listmonk.yoursite.com>", "app.lang" : "en", "app.logo_url" : "", "app.max_send_errors" : 1000, "app.message_rate" : 10, "app.message_sliding_window" : false, "app.message_sliding_window_duration" : "1h", "app.message_sliding_window_rate" : 10000, "app.notify_emails" : ["admin1@mysite.com", "admin2@mysite.com"], "app.root_url" : "http://localhost:9000", "app.send_optin_confirmation" : true, "app.site_name" : "Mailing list", "bounce.actions" : {"hard": {"count": 2, "action": "blocklist"}, "soft": {"count": 2, "action": "none"}, "complaint": {"count": 2, "action": "delete"}}, "bounce.enabled" : false, "bounce.mailboxes" : [{"host": "pop.yoursite.com", "port": 995, "type": "pop", "enabled": false, "password": "password", "username": "username", "return_path": "bounce@listmonk.yoursite.com", "tls_enabled": true, "auth_protocol": "userpass", "scan_interval": "15m", "tls_skip_verify": false}], "bounce.postmark" : {"enabled": false, "password": "", "username": ""}, "bounce.sendgrid_enabled" : false, "bounce.sendgrid_key" : "", "bounce.ses_enabled" : false, "bounce.webhooks_enabled" : false, "messengers" : [], "migrations" : ["v2.6.0"], "privacy.allow_blocklist" : true, "privacy.allow_export" : true, "privacy.allow_preferences" : true, "privacy.allow_wipe" : true, "privacy.domain_blocklist" : [], "privacy.exportable" : ["profile", "subscriptions", "campaign_views", "link_clicks"], "privacy.individual_tracking" : false, "privacy.record_optin_ip" : false, "privacy.unsubscribe_header" : true, "security.captcha_key" : "", "security.captcha_secret" : "", "security.enable_captcha" : false, "smtp" : [{"host": "smtp.yoursite.com", "port": 25, "enabled": true, "password": "password", "tls_type": "STARTTLS", "username": "username", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "cram", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}, {"host": "smtp.gmail.com", "port": 465, "enabled": false, "password": "password", "tls_type": "TLS", "username": "username@gmail.com", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "login", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}], "upload.extensions" : ["jpg", "jpeg", "png", "gif", "svg", "*"], "upload.filesystem.upload_path" : "uploads", "upload.filesystem.upload_uri" : "/uploads", "upload.max_file_size" : 5000, "upload.provider" : "filesystem", "upload.s3.aws_access_key_id" : "", "upload.s3.aws_default_region" : "ap-south-1", "upload.s3.aws_secret_access_key" : "", "upload.s3.bucket" : "", "upload.s3.bucket_domain" : "", "upload.s3.bucket_path" : "/", "upload.s3.bucket_type" : "public", "upload.s3.expiry" : "167h", "upload.s3.public_url" : "", "upload.s3.url" : "https://ap-south-1.s3.amazonaws.com" }']}, {_: [], row_values: ['{ "app.batch_size" : 1000, "app.check_updates" : true, "app.concurrency" : 10, "appearance.admin.custom_css" : "", "appearance.admin.custom_js" : "", "appearance.public.custom_css" : "", "appearance.public.custom_js" : "", "app.enable_public_archive" : true, "app.enable_public_archive_rss_content" : true, "app.enable_public_subscription_page" : true, "app.favicon_url" : "", "app.from_email" : "listmonk <noreply@listmonk.yoursite.com>", "app.lang" : "en", "app.logo_url" : "", "app.max_send_errors" : 1000, "app.message_rate" : 10, "app.message_sliding_window" : false, "app.message_sliding_window_duration" : "1h", "app.message_sliding_window_rate" : 10000, "app.notify_emails" : ["admin1@mysite.com", "admin2@mysite.com"], "app.root_url" : "http://localhost:9000", "app.send_optin_confirmation" : true, "app.site_name" : "Mailing list", "bounce.actions" : {"hard": {"count": 2, "action": "blocklist"}, "soft": {"count": 2, "action": "none"}, "complaint": {"count": 2, "action": "delete"}}, "bounce.enabled" : false, "bounce.mailboxes" : [{"host": "pop.yoursite.com", "port": 995, "type": "pop", "enabled": false, "password": "password", "username": "username", "return_path": "bounce@listmonk.yoursite.com", "tls_enabled": true, "auth_protocol": "userpass", "scan_interval": "15m", "tls_skip_verify": false}], "bounce.postmark" : {"enabled": false, "password": "", "username": ""}, "bounce.sendgrid_enabled" : false, "bounce.sendgrid_key" : "", "bounce.ses_enabled" : false, "bounce.webhooks_enabled" : false, "messengers" : [], "migrations" : ["v2.6.0"], "privacy.allow_blocklist" : true, "privacy.allow_export" : true, "privacy.allow_preferences" : true, "privacy.allow_wipe" : true, "privacy.domain_blocklist" : [], "privacy.exportable" : ["profile", "subscriptions", "campaign_views", "link_clicks"], "privacy.individual_tracking" : false, "privacy.record_optin_ip" : false, "privacy.unsubscribe_header" : true, "security.captcha_key" : "", "security.captcha_secret" : "", "security.enable_captcha" : false, "smtp" : [{"host": "smtp.yoursite.com", "port": 25, "enabled": true, "password": "password", "tls_type": "STARTTLS", "username": "username", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "cram", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}, {"host": "smtp.gmail.com", "port": 465, "enabled": false, "password": "password", "tls_type": "TLS", "username": "username@gmail.com", "max_conns": 10, "idle_timeout": "15s", "wait_timeout": "5s", "auth_protocol": "login", "email_headers": [], "hello_hostname": "", "max_msg_retries": 2, "tls_skip_verify": false}], "upload.extensions" : ["jpg", "jpeg", "png", "gif", "svg", "*"], "upload.filesystem.upload_path" : "uploads", "upload.filesystem.upload_uri" : "/uploads", "upload.max_file_size" : 5000, "upload.provider" : "filesystem", "upload.s3.aws_access_key_id" : "", "upload.s3.aws_default_region" : "ap-south-1", "upload.s3.aws_secret_access_key" : "", "upload.s3.bucket" : "", "upload.s3.bucket_domain" : "", "upload.s3.bucket_path" : "/", "upload.s3.bucket_type" : "public", "upload.s3.expiry" : "167h", "upload.s3.public_url" : "", "upload.s3.url" : "https://ap-south-1.s3.amazonaws.com" }']}]
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [115, 101, 116, 116, 105, 110, 103, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.407148539Z
    restimestampmock: 2023-11-03T03:02:44.407185411Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "1"
          parse:
            - name: "1"
              query: WITH clicks AS ( SELECT JSON_AGG(ROW_TO_JSON(row)) FROM ( WITH viewDates AS ( SELECT TIMEZONE('UTC', created_at)::DATE AS to_date, TIMEZONE('UTC', created_at)::DATE - INTERVAL '30 DAY' AS from_date FROM link_clicks ORDER BY id DESC LIMIT 1 ) SELECT COUNT(*) AS count, created_at::DATE as date FROM link_clicks WHERE TIMEZONE('UTC', created_at)::DATE BETWEEN (SELECT from_date FROM viewDates) AND (SELECT to_date FROM viewDates) GROUP by date ORDER BY date ) row ), views AS ( SELECT JSON_AGG(ROW_TO_JSON(row)) FROM ( WITH viewDates AS ( SELECT TIMEZONE('UTC', created_at)::DATE AS to_date, TIMEZONE('UTC', created_at)::DATE - INTERVAL '30 DAY' AS from_date FROM campaign_views ORDER BY id DESC LIMIT 1 ) SELECT COUNT(*) AS count, created_at::DATE as date FROM campaign_views WHERE TIMEZONE('UTC', created_at)::DATE BETWEEN (SELECT from_date FROM viewDates) AND (SELECT to_date FROM viewDates) GROUP by date ORDER BY date ) row ) SELECT JSON_BUILD_OBJECT('link_clicks', COALESCE((SELECT * FROM clicks), '[]'), 'campaign_views', COALESCE((SELECT * FROM views), '[]'));
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [106, 115, 111, 110, 95, 98, 117, 105, 108, 100, 95, 111, 98, 106, 101, 99, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.409071232Z
    restimestampmock: 2023-11-03T03:02:44.409093314Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "2"
          parse:
            - name: "2"
              query: WITH subs AS ( SELECT COUNT(*) AS num, status FROM subscribers GROUP BY status ) SELECT JSON_BUILD_OBJECT('subscribers', JSON_BUILD_OBJECT( 'total', (SELECT SUM(num) FROM subs), 'blocklisted', (SELECT num FROM subs WHERE status='blocklisted'), 'orphans', ( SELECT COUNT(id) FROM subscribers LEFT JOIN subscriber_lists ON (subscribers.id = subscriber_lists.subscriber_id) WHERE subscriber_lists.subscriber_id IS NULL ) ), 'lists', JSON_BUILD_OBJECT( 'total', (SELECT COUNT(*) FROM lists), 'private', (SELECT COUNT(*) FROM lists WHERE type='private'), 'public', (SELECT COUNT(*) FROM lists WHERE type='public'), 'optin_single', (SELECT COUNT(*) FROM lists WHERE optin='single'), 'optin_double', (SELECT COUNT(*) FROM lists WHERE optin='double') ), 'campaigns', JSON_BUILD_OBJECT( 'total', (SELECT COUNT(*) FROM campaigns), 'by_status', ( SELECT JSON_OBJECT_AGG (status, num) FROM (SELECT status, COUNT(*) AS num FROM campaigns GROUP BY status) r ) ), 'messages', (SELECT SUM(sent) AS messages FROM campaigns));
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [106, 115, 111, 110, 95, 98, 117, 105, 108, 100, 95, 111, 98, 106, 101, 99, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.41013078Z
    restimestampmock: 2023-11-03T03:02:44.410149029Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "3"
          parse:
            - name: "3"
              query: WITH sub AS ( INSERT INTO subscribers (uuid, email, name, status, attribs) VALUES($1, $2, $3, $4, $5) RETURNING id, status ), listIDs AS ( SELECT id FROM lists WHERE (CASE WHEN CARDINALITY($6::INT[]) > 0 THEN id=ANY($6) ELSE uuid=ANY($7::UUID[]) END) ), subs AS ( INSERT INTO subscriber_lists (subscriber_id, list_id, status) VALUES( (SELECT id FROM sub), UNNEST(ARRAY(SELECT id FROM listIDs)), (CASE WHEN $4='blocklisted' THEN 'unsubscribed'::subscription_status ELSE $8::subscription_status END) ) ON CONFLICT (subscriber_id, list_id) DO UPDATE SET updated_at=NOW(), status=( CASE WHEN $4='blocklisted' OR (SELECT status FROM sub)='blocklisted' THEN 'unsubscribed'::subscription_status ELSE $8::subscription_status END ) ) SELECT id from sub;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
                - 25
                - 16400
                - 3802
                - 1007
                - 2951
                - 16408
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.411699Z
    restimestampmock: 2023-11-03T03:02:44.411729539Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "4"
          parse:
            - name: "4"
              query: WITH sub AS ( INSERT INTO subscribers as s (uuid, email, name, attribs, status) VALUES($1, $2, $3, $4, 'enabled') ON CONFLICT (email) DO UPDATE SET name=(CASE WHEN $7 THEN $3 ELSE s.name END), attribs=(CASE WHEN $7 THEN $4 ELSE s.attribs END), updated_at=NOW() RETURNING uuid, id ), subs AS ( INSERT INTO subscriber_lists (subscriber_id, list_id, status) VALUES((SELECT id FROM sub), UNNEST($5::INT[]), $6) ON CONFLICT (subscriber_id, list_id) DO UPDATE SET updated_at=NOW(), status=(CASE WHEN $7 THEN $6 ELSE subscriber_lists.status END) ) SELECT uuid, id from sub;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
                - 25
                - 3802
                - 1007
                - 16408
                - 16
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.412463736Z
    restimestampmock: 2023-11-03T03:02:44.412478235Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "5"
          parse:
            - name: "5"
              query: WITH sub AS ( INSERT INTO subscribers (uuid, email, name, attribs, status) VALUES($1, $2, $3, $4, 'blocklisted') ON CONFLICT (email) DO UPDATE SET status='blocklisted', updated_at=NOW() RETURNING id ) UPDATE subscriber_lists SET status='unsubscribed', updated_at=NOW() WHERE subscriber_id = (SELECT id FROM sub);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
                - 25
                - 3802
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.413095731Z
    restimestampmock: 2023-11-03T03:02:44.413114397Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "6"
          parse:
            - name: "6"
              query: SELECT * FROM subscribers WHERE CASE WHEN $1 > 0 THEN id = $1 WHEN $2 != '' THEN uuid = $2::UUID WHEN $3 != '' THEN email = $3 END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [101, 109, 97, 105, 108], table_oid: 16461, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16461, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 116, 116, 114, 105, 98, 115], table_oid: 16461, table_attribute_number: 5, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16461, table_attribute_number: 6, data_type_oid: 16400, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.413585571Z
    restimestampmock: 2023-11-03T03:02:44.413606777Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "7"
          parse:
            - name: "7"
              query: SELECT * FROM subscribers WHERE email=ANY($1);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1009
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [101, 109, 97, 105, 108], table_oid: 16461, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16461, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 116, 116, 114, 105, 98, 115], table_oid: 16461, table_attribute_number: 5, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16461, table_attribute_number: 6, data_type_oid: 16400, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.414127615Z
    restimestampmock: 2023-11-03T03:02:44.414159612Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "8"
          parse:
            - name: "8"
              query: WITH sub AS ( SELECT id FROM subscribers WHERE CASE WHEN $1 > 0 THEN id = $1 ELSE uuid = $2 END ) SELECT * FROM lists LEFT JOIN subscriber_lists ON (lists.id = subscriber_lists.list_id) WHERE subscriber_id = (SELECT id FROM sub) AND (CASE WHEN CARDINALITY($3::INT[]) > 0 THEN id = ANY($3::INT[]) WHEN CARDINALITY($4::UUID[]) > 0 THEN uuid = ANY($4::UUID[]) ELSE TRUE END) AND (CASE WHEN $5 != '' THEN subscriber_lists.status = $5::subscription_status ELSE TRUE END) AND (CASE WHEN $6 != '' THEN lists.optin = $6::list_optin ELSE TRUE END) ORDER BY id;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
                - 1007
                - 2951
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16482, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16482, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16482, table_attribute_number: 4, data_type_oid: 16386, data_type_size: 4, type_modifier: -1, format: 0}, {name: [111, 112, 116, 105, 110], table_oid: 16482, table_attribute_number: 5, data_type_oid: 16394, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16482, table_attribute_number: 6, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110], table_oid: 16482, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16497, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 95, 105, 100], table_oid: 16497, table_attribute_number: 2, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 116, 97], table_oid: 16497, table_attribute_number: 3, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16497, table_attribute_number: 4, data_type_oid: 16408, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16497, table_attribute_number: 5, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16497, table_attribute_number: 6, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.414675241Z
    restimestampmock: 2023-11-03T03:02:44.414691324Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "9"
          parse:
            - name: "9"
              query: WITH sub AS ( SELECT id FROM subscribers WHERE CASE WHEN $1 > 0 THEN id = $1 ELSE uuid = $2 END ) SELECT lists.*, subscriber_lists.status as subscription_status, subscriber_lists.created_at as subscription_created_at, subscriber_lists.meta as subscription_meta FROM lists LEFT JOIN subscriber_lists ON (subscriber_lists.list_id = lists.id AND subscriber_lists.subscriber_id = (SELECT id FROM sub)) WHERE CASE WHEN $3 = TRUE THEN TRUE ELSE subscriber_lists.status IS NOT NULL END ORDER BY subscriber_lists.status;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
                - 16
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16482, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16482, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16482, table_attribute_number: 4, data_type_oid: 16386, data_type_size: 4, type_modifier: -1, format: 0}, {name: [111, 112, 116, 105, 110], table_oid: 16482, table_attribute_number: 5, data_type_oid: 16394, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16482, table_attribute_number: 6, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110], table_oid: 16482, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 115, 116, 97, 116, 117, 115], table_oid: 16497, table_attribute_number: 4, data_type_oid: 16408, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16497, table_attribute_number: 5, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 95, 109, 101, 116, 97], table_oid: 16497, table_attribute_number: 3, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.415630839Z
    restimestampmock: 2023-11-03T03:02:44.415649712Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "10"
          parse:
            - name: "10"
              query: WITH subs AS ( SELECT subscriber_id, JSON_AGG( ROW_TO_JSON( (SELECT l FROM ( SELECT subscriber_lists.status AS subscription_status, subscriber_lists.created_at AS subscription_created_at, subscriber_lists.updated_at AS subscription_updated_at, subscriber_lists.meta AS subscription_meta, lists.* ) l) ) ) AS lists FROM lists LEFT JOIN subscriber_lists ON (subscriber_lists.list_id = lists.id) WHERE subscriber_lists.subscriber_id = ANY($1) GROUP BY subscriber_id ) SELECT id as subscriber_id, COALESCE(s.lists, '[]') AS lists FROM (SELECT id FROM UNNEST($1) AS id) x LEFT JOIN subs AS s ON (s.subscriber_id = id) ORDER BY ARRAY_POSITION($1, id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.416423448Z
    restimestampmock: 2023-11-03T03:02:44.416439322Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "11"
          parse:
            - name: "11"
              query: UPDATE subscribers SET email=(CASE WHEN $2 != '' THEN $2 ELSE email END), name=(CASE WHEN $3 != '' THEN $3 ELSE name END), status=(CASE WHEN $4 != '' THEN $4::subscriber_status ELSE status END), attribs=(CASE WHEN $5 != '' THEN $5::JSONB ELSE attribs END), updated_at=NOW() WHERE id = $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.416891122Z
    restimestampmock: 2023-11-03T03:02:44.416906079Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "12"
          parse:
            - name: "12"
              query: WITH s AS ( UPDATE subscribers SET email=(CASE WHEN $2 != '' THEN $2 ELSE email END), name=(CASE WHEN $3 != '' THEN $3 ELSE name END), status=(CASE WHEN $4 != '' THEN $4::subscriber_status ELSE status END), attribs=(CASE WHEN $5 != '' THEN $5::JSONB ELSE attribs END), updated_at=NOW() WHERE id = $1 RETURNING id ), listIDs AS ( SELECT id FROM lists WHERE (CASE WHEN CARDINALITY($6::INT[]) > 0 THEN id=ANY($6) ELSE uuid=ANY($7::UUID[]) END) ), d AS ( DELETE FROM subscriber_lists WHERE $9 = TRUE AND subscriber_id = $1 AND list_id != ALL(SELECT id FROM listIDs) ) INSERT INTO subscriber_lists (subscriber_id, list_id, status) VALUES( (SELECT id FROM s), UNNEST(ARRAY(SELECT id FROM listIDs)), (CASE WHEN $4='blocklisted' THEN 'unsubscribed'::subscription_status ELSE $8::subscription_status END) ) ON CONFLICT (subscriber_id, list_id) DO UPDATE SET status = ( CASE WHEN $4='blocklisted' THEN 'unsubscribed'::subscription_status WHEN $9 = TRUE THEN subscriber_lists.status ELSE $8::subscription_status END );
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 25
                - 25
                - 1007
                - 2951
                - 16408
                - 16
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.417247013Z
    restimestampmock: 2023-11-03T03:02:44.417266178Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "13"
          parse:
            - name: "13"
              query: WITH b AS ( UPDATE subscribers SET status='blocklisted', updated_at=NOW() WHERE id = ANY($1::INT[]) ) UPDATE subscriber_lists SET status='unsubscribed', updated_at=NOW() WHERE subscriber_id = ANY($1::INT[]);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.41767619Z
    restimestampmock: 2023-11-03T03:02:44.417693105Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "14"
          parse:
            - name: "14"
              query: INSERT INTO subscriber_lists (subscriber_id, list_id, status) (SELECT a, b, (CASE WHEN $3 != '' THEN $3::subscription_status ELSE 'unconfirmed' END) FROM UNNEST($1::INT[]) a, UNNEST($2::INT[]) b) ON CONFLICT (subscriber_id, list_id) DO UPDATE SET status=(CASE WHEN $3 != '' THEN $3::subscription_status ELSE subscriber_lists.status END);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1007
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.418294687Z
    restimestampmock: 2023-11-03T03:02:44.418314269Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "15"
          parse:
            - name: "15"
              query: DELETE FROM subscriber_lists WHERE (subscriber_id, list_id) = ANY(SELECT a, b FROM UNNEST($1::INT[]) a, UNNEST($2::INT[]) b);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.418715864Z
    restimestampmock: 2023-11-03T03:02:44.418729113Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "16"
          parse:
            - name: "16"
              query: WITH optins AS ( SELECT id FROM lists WHERE optin = 'double' ) DELETE FROM subscriber_lists WHERE status = 'unconfirmed' AND list_id IN (SELECT id FROM optins) AND created_at < $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1184
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.419033008Z
    restimestampmock: 2023-11-03T03:02:44.419047382Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "17"
          parse:
            - name: "17"
              query: WITH subID AS ( SELECT id FROM subscribers WHERE uuid = $1::UUID ), listIDs AS ( SELECT id FROM lists WHERE uuid = ANY($2::UUID[]) ) UPDATE subscriber_lists SET status='confirmed', meta=meta || $3, updated_at=NOW() WHERE subscriber_id = (SELECT id FROM subID) AND list_id = ANY(SELECT id FROM listIDs);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 2951
                - 3802
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.41937565Z
    restimestampmock: 2023-11-03T03:02:44.419393148Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "18"
          parse:
            - name: "18"
              query: WITH listIDs AS ( SELECT ARRAY( SELECT id FROM lists WHERE (CASE WHEN CARDINALITY($2::INT[]) > 0 THEN id=ANY($2) ELSE uuid=ANY($3::UUID[]) END) ) id ) UPDATE subscriber_lists SET status='unsubscribed', updated_at=NOW() WHERE (subscriber_id, list_id) = ANY(SELECT a, b FROM UNNEST($1::INT[]) a, UNNEST((SELECT id FROM listIDs)) b);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1007
                - 2951
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.41989632Z
    restimestampmock: 2023-11-03T03:02:44.419913277Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "19"
          parse:
            - name: "19"
              query: DELETE FROM subscribers WHERE CASE WHEN ARRAY_LENGTH($1::INT[], 1) > 0 THEN id = ANY($1) ELSE uuid = ANY($2::UUID[]) END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 2951
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.420267877Z
    restimestampmock: 2023-11-03T03:02:44.420312332Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "20"
          parse:
            - name: "20"
              query: DELETE FROM subscribers WHERE status = 'blocklisted';
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.420593353Z
    restimestampmock: 2023-11-03T03:02:44.420608768Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "21"
          parse:
            - name: "21"
              query: DELETE FROM subscribers a WHERE NOT EXISTS (SELECT 1 FROM subscriber_lists b WHERE b.subscriber_id = a.id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.421010614Z
    restimestampmock: 2023-11-03T03:02:44.421021572Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "22"
          parse:
            - name: "22"
              query: WITH lists AS ( SELECT list_id FROM campaign_lists LEFT JOIN campaigns ON (campaign_lists.campaign_id = campaigns.id) WHERE campaigns.uuid = $1 ), sub AS ( UPDATE subscribers SET status = (CASE WHEN $3 IS TRUE THEN 'blocklisted' ELSE status END) WHERE uuid = $2 RETURNING id ) UPDATE subscriber_lists SET status = 'unsubscribed', updated_at=NOW() WHERE subscriber_id = (SELECT id FROM sub) AND status != 'unsubscribed' AND CASE WHEN $3 IS FALSE THEN list_id = ANY(SELECT list_id FROM lists) ELSE list_id != 0 END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 2950
                - 16
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.421542617Z
    restimestampmock: 2023-11-03T03:02:44.421571823Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "23"
          parse:
            - name: "23"
              query: WITH prof AS ( SELECT id, uuid, email, name, attribs, status, created_at, updated_at FROM subscribers WHERE CASE WHEN $1 > 0 THEN id = $1 ELSE uuid = $2 END ), subs AS ( SELECT subscriber_lists.status AS subscription_status, (CASE WHEN lists.type = 'private' THEN 'Private list' ELSE lists.name END) as name, lists.type, subscriber_lists.created_at FROM lists LEFT JOIN subscriber_lists ON (subscriber_lists.list_id = lists.id) WHERE subscriber_lists.subscriber_id = (SELECT id FROM prof) ), views AS ( SELECT subject as campaign, COUNT(subscriber_id) as views FROM campaign_views LEFT JOIN campaigns ON (campaigns.id = campaign_views.campaign_id) WHERE subscriber_id = (SELECT id FROM prof) GROUP BY campaigns.id ORDER BY campaigns.id ), clicks AS ( SELECT url, COUNT(subscriber_id) as clicks FROM link_clicks LEFT JOIN links ON (links.id = link_clicks.link_id) WHERE subscriber_id = (SELECT id FROM prof) GROUP BY links.id ORDER BY links.id ) SELECT (SELECT email FROM prof) as email, COALESCE((SELECT JSON_AGG(t) FROM prof t), '{}') AS profile, COALESCE((SELECT JSON_AGG(t) FROM subs t), '[]') AS subscriptions, COALESCE((SELECT JSON_AGG(t) FROM views t), '[]') AS campaign_views, COALESCE((SELECT JSON_AGG(t) FROM clicks t), '[]') AS link_clicks;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [101, 109, 97, 105, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [112, 114, 111, 102, 105, 108, 101], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 112, 116, 105, 111, 110, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 118, 105, 101, 119, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}, {name: [108, 105, 110, 107, 95, 99, 108, 105, 99, 107, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.422203236Z
    restimestampmock: 2023-11-03T03:02:44.422215985Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "24"
          parse:
            - name: "24"
              query: INSERT INTO lists (uuid, name, type, optin, tags, description) VALUES($1, $2, $3, $4, $5, $6) RETURNING id;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
                - 16386
                - 16394
                - 1015
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.422890103Z
    restimestampmock: 2023-11-03T03:02:44.422908435Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "25"
          parse:
            - name: "25"
              query: SELECT * FROM lists WHERE (CASE WHEN $1 = '' THEN 1=1 ELSE type=$1::list_type END) ORDER BY CASE WHEN $2 = 'id' THEN id END, CASE WHEN $2 = 'name' THEN name END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16482, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16482, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16482, table_attribute_number: 4, data_type_oid: 16386, data_type_size: 4, type_modifier: -1, format: 0}, {name: [111, 112, 116, 105, 110], table_oid: 16482, table_attribute_number: 5, data_type_oid: 16394, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16482, table_attribute_number: 6, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110], table_oid: 16482, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.423399899Z
    restimestampmock: 2023-11-03T03:02:44.423434563Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "26"
          parse:
            - name: "26"
              query: SELECT * FROM lists WHERE (CASE WHEN $1 != '' THEN optin=$1::list_optin ELSE TRUE END) AND (CASE WHEN $2::INT[] IS NOT NULL THEN id = ANY($2::INT[]) WHEN $3::UUID[] IS NOT NULL THEN uuid = ANY($3::UUID[]) END) ORDER BY name;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 25
                - 1007
                - 2951
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16482, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16482, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16482, table_attribute_number: 4, data_type_oid: 16386, data_type_size: 4, type_modifier: -1, format: 0}, {name: [111, 112, 116, 105, 110], table_oid: 16482, table_attribute_number: 5, data_type_oid: 16394, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16482, table_attribute_number: 6, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110], table_oid: 16482, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.424062642Z
    restimestampmock: 2023-11-03T03:02:44.424083724Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "27"
          parse:
            - name: "27"
              query: UPDATE lists SET name=(CASE WHEN $2 != '' THEN $2 ELSE name END), type=(CASE WHEN $3 != '' THEN $3::list_type ELSE type END), optin=(CASE WHEN $4 != '' THEN $4::list_optin ELSE optin END), tags=$5::VARCHAR(100)[], description=(CASE WHEN $6 != '' THEN $6 ELSE description END), updated_at=NOW() WHERE id = $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 25
                - 1015
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.424880791Z
    restimestampmock: 2023-11-03T03:02:44.424954286Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "28"
          parse:
            - name: "28"
              query: UPDATE lists SET updated_at=NOW() WHERE id = ANY($1);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.425620612Z
    restimestampmock: 2023-11-03T03:02:44.42563507Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "29"
          parse:
            - name: "29"
              query: DELETE FROM lists WHERE id = ALL($1);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.426175114Z
    restimestampmock: 2023-11-03T03:02:44.426190279Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "30"
          parse:
            - name: "30"
              query: WITH campLists AS ( SELECT lists.id AS list_id, campaign_id, optin FROM lists INNER JOIN campaign_lists ON (campaign_lists.list_id = lists.id) WHERE lists.id = ANY($14::INT[]) ), tpl AS ( SELECT (CASE WHEN $13 = 0 THEN id ELSE $13 END) AS id FROM templates WHERE is_default IS TRUE ), counts AS ( SELECT COALESCE(COUNT(id), 0) as to_send, COALESCE(MAX(id), 0) as max_sub_id FROM subscribers LEFT JOIN campLists ON (campLists.campaign_id = ANY($14::INT[])) LEFT JOIN subscriber_lists ON ( subscriber_lists.status != 'unsubscribed' AND subscribers.id = subscriber_lists.subscriber_id AND subscriber_lists.list_id = campLists.list_id AND (CASE WHEN campLists.optin = 'double' THEN subscriber_lists.status = 'confirmed' ELSE true END) ) WHERE subscriber_lists.list_id=ANY($14::INT[]) AND subscribers.status='enabled' ), camp AS ( INSERT INTO campaigns (uuid, type, name, subject, from_email, body, altbody, content_type, send_at, headers, tags, messenger, template_id, to_send, max_subscriber_id, archive, archive_template_id, archive_meta) SELECT $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, (SELECT id FROM tpl), (SELECT to_send FROM counts), (SELECT max_sub_id FROM counts), $15, (CASE WHEN $16 = 0 THEN (SELECT id FROM tpl) ELSE $16 END), $17 RETURNING id ), med AS ( INSERT INTO campaign_media (campaign_id, media_id, filename) (SELECT (SELECT id FROM camp), id, filename FROM media WHERE id=ANY($18::INT[])) ) INSERT INTO campaign_lists (campaign_id, list_id, list_name) (SELECT (SELECT id FROM camp), id, name FROM lists WHERE id=ANY($14::INT[])) RETURNING (SELECT id FROM camp);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 16430
                - 25
                - 25
                - 25
                - 25
                - 25
                - 16436
                - 1184
                - 3802
                - 1015
                - 25
                - 23
                - 1007
                - 16
                - 23
                - 3802
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.42700897Z
    restimestampmock: 2023-11-03T03:02:44.427025968Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "31"
          parse:
            - name: "31"
              query: SELECT campaigns.*, COALESCE(templates.body, (SELECT body FROM templates WHERE is_default = true LIMIT 1)) AS template_body FROM campaigns LEFT JOIN templates ON ( CASE WHEN $3 = 'default' THEN templates.id = campaigns.template_id ELSE templates.id = campaigns.archive_template_id END ) WHERE CASE WHEN $1 > 0 THEN campaigns.id = $1 ELSE uuid = $2 END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 97, 120, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 18, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 97, 115, 116, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 19, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.427954318Z
    restimestampmock: 2023-11-03T03:02:44.427973191Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          payload: UAAAAfQzMgBTRUxFQ1QgY2FtcGFpZ25zLiosIENPQUxFU0NFKHRlbXBsYXRlcy5ib2R5LCAoU0VMRUNUIGJvZHkgRlJPTSB0ZW1wbGF0ZXMgV0hFUkUgaXNfZGVmYXVsdCA9IHRydWUgTElNSVQgMSkpIEFTIHRlbXBsYXRlX2JvZHksICggCVNFTEVDVCBDT0FMRVNDRShBUlJBWV9UT19KU09OKEFSUkFZX0FHRyhsKSksICdbXScpIEZST00gKCAJCVNFTEVDVCBDT0FMRVNDRShjYW1wYWlnbl9saXN0cy5saXN0X2lkLCAwKSBBUyBpZCwgY2FtcGFpZ25fbGlzdHMubGlzdF9uYW1lIEFTIG5hbWUgRlJPTSBjYW1wYWlnbl9saXN0cyBXSEVSRSBjYW1wYWlnbl9saXN0cy5jYW1wYWlnbl9pZCA9IGNhbXBhaWducy5pZCAJKSBsICkgQVMgbGlzdHMgRlJPTSBjYW1wYWlnbnMgTEVGVCBKT0lOIHRlbXBsYXRlcyBPTiAodGVtcGxhdGVzLmlkID0gKENBU0UgV0hFTiAkMj0wIFRIRU4gY2FtcGFpZ25zLnRlbXBsYXRlX2lkIEVMU0UgJDIgRU5EKSkgV0hFUkUgY2FtcGFpZ25zLmlkID0gJDE7AAAARAAAAAhTMzIAUwAAAAQ=
          describe:
            object_type: 83
            name: "32"
          parse:
            - name: "32"
              query: SELECT campaigns.*, COALESCE(templates.body, (SELECT body FROM templates WHERE is_default = true LIMIT 1)) AS template_body, ( SELECT COALESCE(ARRAY_TO_JSON(ARRAY_AGG(l)), '[]') FROM ( SELECT COALESCE(campaign_lists.list_id, 0) AS id, campaign_lists.list_name AS name FROM campaign_lists WHERE campaign_lists.campaign_id = campaigns.id ) l ) AS lists FROM campaigns LEFT JOIN templates ON (templates.id = (CASE WHEN $2=0 THEN campaigns.template_id ELSE $2 END)) WHERE campaigns.id = $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 97, 120, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 18, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 97, 115, 116, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 19, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.429154897Z
    restimestampmock: 2023-11-03T03:02:44.429182228Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "33"
          parse:
            - name: "33"
              query: WITH lists AS ( SELECT campaign_id, JSON_AGG(JSON_BUILD_OBJECT('id', list_id, 'name', list_name)) AS lists FROM campaign_lists WHERE campaign_id = ANY($1) GROUP BY campaign_id ), media AS ( SELECT campaign_id, JSON_AGG(JSON_BUILD_OBJECT('id', media_id, 'filename', filename)) AS media FROM campaign_media WHERE campaign_id = ANY($1) GROUP BY campaign_id ), views AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM campaign_views WHERE campaign_id = ANY($1) GROUP BY campaign_id ), clicks AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM link_clicks WHERE campaign_id = ANY($1) GROUP BY campaign_id ), bounces AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM bounces WHERE campaign_id = ANY($1) GROUP BY campaign_id ) SELECT id as campaign_id, COALESCE(v.num, 0) AS views, COALESCE(c.num, 0) AS clicks, COALESCE(b.num, 0) AS bounces, COALESCE(l.lists, '[]') AS lists, COALESCE(m.media, '[]') AS media FROM (SELECT id FROM UNNEST($1) AS id) x LEFT JOIN lists AS l ON (l.campaign_id = id) LEFT JOIN media AS m ON (m.campaign_id = id) LEFT JOIN views AS v ON (v.campaign_id = id) LEFT JOIN clicks AS c ON (c.campaign_id = id) LEFT JOIN bounces AS b ON (b.campaign_id = id) ORDER BY ARRAY_POSITION($1, id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [118, 105, 101, 119, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 108, 105, 99, 107, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [98, 111, 117, 110, 99, 101, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 100, 105, 97], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.431233996Z
    restimestampmock: 2023-11-03T03:02:44.431286659Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "34"
          parse:
            - name: "34"
              query: SELECT id, status, to_send, sent, started_at, updated_at FROM campaigns WHERE status=$1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 16416
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.432504945Z
    restimestampmock: 2023-11-03T03:02:44.432523569Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "35"
          parse:
            - name: "35"
              query: SELECT COUNT(*) OVER () AS total, campaigns.*, COALESCE(templates.body, (SELECT body FROM templates WHERE is_default = true LIMIT 1)) AS template_body FROM campaigns LEFT JOIN templates ON ( CASE WHEN $3 = 'default' THEN templates.id = campaigns.template_id ELSE templates.id = campaigns.archive_template_id END ) WHERE campaigns.archive=true AND campaigns.type='regular' AND campaigns.status=ANY('{running, paused, finished}') ORDER by campaigns.created_at DESC OFFSET $1 LIMIT $2;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 20
                - 20
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [116, 111, 116, 97, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 97, 120, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 18, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 97, 115, 116, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 19, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.433252849Z
    restimestampmock: 2023-11-03T03:02:44.433273223Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "36"
          parse:
            - name: "36"
              query: WITH intval AS ( SELECT CASE WHEN (EXTRACT (EPOCH FROM ($3::TIMESTAMP - $2::TIMESTAMP)) / 86400) >= 7 THEN 'day' ELSE 'hour' END ) SELECT campaign_id, COUNT(*) AS "count", DATE_TRUNC((SELECT * FROM intval), created_at) AS "timestamp" FROM campaign_views WHERE campaign_id=ANY($1) AND created_at >= $2 AND created_at <= $3 GROUP BY campaign_id, "timestamp" ORDER BY "timestamp" ASC;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1114
                - 1114
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 105, 100], table_oid: 16602, table_attribute_number: 2, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 111, 117, 110, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 105, 109, 101, 115, 116, 97, 109, 112], table_oid: 0, table_attribute_number: 0, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.434424222Z
    restimestampmock: 2023-11-03T03:02:44.434445721Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "37"
          parse:
            - name: "37"
              query: WITH intval AS ( SELECT CASE WHEN (EXTRACT (EPOCH FROM ($3::TIMESTAMP - $2::TIMESTAMP)) / 86400) >= 7 THEN 'day' ELSE 'hour' END ) SELECT campaign_id, COUNT(*) AS "count", DATE_TRUNC((SELECT * FROM intval), created_at) AS "timestamp" FROM link_clicks WHERE campaign_id=ANY($1) AND created_at >= $2 AND created_at <= $3 GROUP BY campaign_id, "timestamp" ORDER BY "timestamp" ASC;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1114
                - 1114
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 105, 100], table_oid: 16676, table_attribute_number: 2, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 111, 117, 110, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 105, 109, 101, 115, 116, 97, 109, 112], table_oid: 0, table_attribute_number: 0, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.434970849Z
    restimestampmock: 2023-11-03T03:02:44.434980765Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "38"
          parse:
            - name: "38"
              query: SELECT COUNT(*) AS "count", url FROM link_clicks LEFT JOIN links ON (link_clicks.link_id = links.id) WHERE campaign_id=ANY($1) AND link_clicks.created_at >= $2 AND link_clicks.created_at <= $3 GROUP BY links.url ORDER BY "count" DESC LIMIT 50;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1184
                - 1184
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 111, 117, 110, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 114, 108], table_oid: 16660, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.43580933Z
    restimestampmock: 2023-11-03T03:02:44.435834411Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "39"
          parse:
            - name: "39"
              query: WITH intval AS ( SELECT CASE WHEN (EXTRACT (EPOCH FROM ($3::TIMESTAMP - $2::TIMESTAMP)) / 86400) >= 7 THEN 'day' ELSE 'hour' END ) SELECT campaign_id, COUNT(*) AS "count", DATE_TRUNC((SELECT * FROM intval), created_at) AS "timestamp" FROM bounces WHERE campaign_id=ANY($1) AND created_at >= $2 AND created_at <= $3 GROUP BY campaign_id, "timestamp" ORDER BY "timestamp" ASC;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 1114
                - 1114
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 105, 100], table_oid: 16715, table_attribute_number: 3, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 111, 117, 110, 116], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 105, 109, 101, 115, 116, 97, 109, 112], table_oid: 0, table_attribute_number: 0, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.436548818Z
    restimestampmock: 2023-11-03T03:02:44.436563733Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "40"
          parse:
            - name: "40"
              query: DELETE FROM campaign_views WHERE created_at < $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1184
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.437090653Z
    restimestampmock: 2023-11-03T03:02:44.437124693Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "41"
          parse:
            - name: "41"
              query: DELETE FROM link_clicks WHERE created_at < $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1184
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.437762355Z
    restimestampmock: 2023-11-03T03:02:44.438017419Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "42"
          parse:
            - name: "42"
              query: WITH camps AS ( SELECT campaigns.*, COALESCE(templates.body, (SELECT body FROM templates WHERE is_default = true LIMIT 1)) AS template_body FROM campaigns LEFT JOIN templates ON (templates.id = campaigns.template_id) WHERE (status='running' OR (status='scheduled' AND NOW() >= campaigns.send_at)) AND NOT(campaigns.id = ANY($1::INT[])) ), campLists AS ( SELECT lists.id AS list_id, campaign_id, optin FROM lists INNER JOIN campaign_lists ON (campaign_lists.list_id = lists.id) WHERE campaign_lists.campaign_id = ANY(SELECT id FROM camps) ), campMedia AS ( SELECT campaign_id, ARRAY_AGG(campaign_media.media_id)::INT[] AS media_id FROM campaign_media WHERE campaign_id = ANY(SELECT id FROM camps) AND media_id IS NOT NULL GROUP BY campaign_id ), counts AS ( SELECT id AS campaign_id, COUNT(DISTINCT(subscriber_lists.subscriber_id)) AS to_send, COALESCE(MAX(subscriber_lists.subscriber_id), 0) AS max_subscriber_id FROM camps LEFT JOIN campLists ON (campLists.campaign_id = camps.id) LEFT JOIN subscriber_lists ON ( subscriber_lists.list_id = campLists.list_id AND (CASE WHEN camps.type = 'optin' THEN subscriber_lists.status = 'unconfirmed' AND campLists.optin = 'double' WHEN campLists.optin = 'double' THEN subscriber_lists.status = 'confirmed' ELSE subscriber_lists.status != 'unsubscribed' END) ) GROUP BY camps.id ), u AS ( UPDATE campaigns AS ca SET to_send = co.to_send, status = (CASE WHEN status != 'running' THEN 'running' ELSE status END), max_subscriber_id = co.max_subscriber_id, started_at=(CASE WHEN ca.started_at IS NULL THEN NOW() ELSE ca.started_at END) FROM (SELECT * FROM counts) co WHERE ca.id = co.campaign_id ) SELECT camps.*, campMedia.media_id FROM camps LEFT JOIN campMedia ON (campMedia.campaign_id = camps.id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 97, 120, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 18, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 97, 115, 116, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 19, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 100, 105, 97, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 1007, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.438901147Z
    restimestampmock: 2023-11-03T03:02:44.438935353Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "43"
          parse:
            - name: "43"
              query: WITH camps AS ( SELECT last_subscriber_id, max_subscriber_id, type FROM campaigns WHERE id = $1 AND status='running' ), campLists AS ( SELECT lists.id AS list_id, optin FROM lists LEFT JOIN campaign_lists ON (campaign_lists.list_id = lists.id) WHERE campaign_lists.campaign_id = $1 ), subIDs AS ( SELECT DISTINCT ON (subscriber_lists.subscriber_id) subscriber_id, list_id, status FROM subscriber_lists WHERE list_id = ANY((SELECT ARRAY_AGG(list_id) FROM campLists)::INT[]) AND status != 'unsubscribed' AND subscriber_id > (SELECT last_subscriber_id FROM camps) AND subscriber_id <= (SELECT max_subscriber_id FROM camps) ORDER BY subscriber_id LIMIT $2 ), subs AS ( SELECT subscribers.* FROM subIDs LEFT JOIN campLists ON (campLists.list_id = subIDs.list_id) INNER JOIN subscribers ON ( subscribers.status != 'blocklisted' AND subscribers.id = subIDs.subscriber_id AND (CASE WHEN (SELECT type FROM camps) = 'optin' THEN subIDs.status = 'unconfirmed' AND campLists.optin = 'double' WHEN campLists.optin = 'double' THEN subIDs.status = 'confirmed' ELSE subIDs.status != 'unsubscribed' END) ) ), u AS ( UPDATE campaigns SET last_subscriber_id = (SELECT MAX(id) FROM subs), sent = sent + (SELECT COUNT(id) FROM subs), updated_at = NOW() WHERE (SELECT COUNT(id) FROM subs) > 0 AND id=$1 ) SELECT * FROM subs;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 20
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [101, 109, 97, 105, 108], table_oid: 16461, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16461, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 116, 116, 114, 105, 98, 115], table_oid: 16461, table_attribute_number: 5, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16461, table_attribute_number: 6, data_type_oid: 16400, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.440526862Z
    restimestampmock: 2023-11-03T03:02:44.440549402Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "44"
          parse:
            - name: "44"
              query: SELECT * FROM subscribers LEFT JOIN subscriber_lists ON (subscribers.id = subscriber_lists.subscriber_id AND subscriber_lists.status != 'unsubscribed') WHERE subscriber_lists.list_id=ANY( SELECT list_id FROM campaign_lists where campaign_id=$1 AND list_id IS NOT NULL ) ORDER BY RANDOM() LIMIT 1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [101, 109, 97, 105, 108], table_oid: 16461, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16461, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 116, 116, 114, 105, 98, 115], table_oid: 16461, table_attribute_number: 5, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16461, table_attribute_number: 6, data_type_oid: 16400, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16497, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 95, 105, 100], table_oid: 16497, table_attribute_number: 2, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 116, 97], table_oid: 16497, table_attribute_number: 3, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16497, table_attribute_number: 4, data_type_oid: 16408, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16497, table_attribute_number: 5, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16497, table_attribute_number: 6, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.44124531Z
    restimestampmock: 2023-11-03T03:02:44.441267475Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "45"
          parse:
            - name: "45"
              query: WITH camp AS ( UPDATE campaigns SET name=$2, subject=$3, from_email=$4, body=$5, altbody=(CASE WHEN $6 = '' THEN NULL ELSE $6 END), content_type=$7::content_type, send_at=$8::TIMESTAMP WITH TIME ZONE, status=(CASE WHEN NOT $9 THEN 'draft' ELSE status END), headers=$10, tags=$11::VARCHAR(100)[], messenger=$12, template_id=$13, archive=$15, archive_template_id=$16, archive_meta=$17, updated_at=NOW() WHERE id = $1 RETURNING id ), clists AS ( DELETE FROM campaign_lists WHERE campaign_id = $1 AND NOT(list_id = ANY($14)) ), med AS ( DELETE FROM campaign_media WHERE campaign_id = $1 AND media_id IS NULL or NOT(media_id = ANY($18)) RETURNING media_id ), medi AS ( INSERT INTO campaign_media (campaign_id, media_id, filename) (SELECT $1 AS campaign_id, id, filename FROM media WHERE id=ANY($18::INT[])) ON CONFLICT (campaign_id, media_id) DO NOTHING ) INSERT INTO campaign_lists (campaign_id, list_id, list_name) (SELECT $1 as campaign_id, id, name FROM lists WHERE id=ANY($14::INT[])) ON CONFLICT (campaign_id, list_id) DO UPDATE SET list_name = EXCLUDED.list_name;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 25
                - 25
                - 25
                - 16436
                - 1184
                - 16
                - 3802
                - 1015
                - 25
                - 23
                - 1007
                - 16
                - 23
                - 3802
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.442011671Z
    restimestampmock: 2023-11-03T03:02:44.442032252Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "46"
          parse:
            - name: "46"
              query: UPDATE campaigns SET status=$2, updated_at=NOW() WHERE id = $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 16416
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.442510676Z
    restimestampmock: 2023-11-03T03:02:44.442531716Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "47"
          parse:
            - name: "47"
              query: UPDATE campaigns SET to_send=(CASE WHEN $2 != 0 THEN $2 ELSE to_send END), sent=(CASE WHEN $3 != 0 THEN $3 ELSE sent END), last_subscriber_id=(CASE WHEN $4 != 0 THEN $4 ELSE last_subscriber_id END), updated_at=NOW() WHERE id=$1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 23
                - 23
                - 23
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.44302693Z
    restimestampmock: 2023-11-03T03:02:44.443043387Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "48"
          parse:
            - name: "48"
              query: UPDATE campaigns SET archive=$2, archive_template_id=(CASE WHEN $3 > 0 THEN $3 ELSE archive_template_id END), archive_meta=(CASE WHEN $4::TEXT != '' THEN $4::JSONB ELSE archive_meta END), updated_at=NOW() WHERE id=$1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 16
                - 23
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.44378675Z
    restimestampmock: 2023-11-03T03:02:44.443800332Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "49"
          parse:
            - name: "49"
              query: WITH view AS ( SELECT campaigns.id as campaign_id, subscribers.id AS subscriber_id FROM campaigns LEFT JOIN subscribers ON (CASE WHEN $2::TEXT != '' THEN subscribers.uuid = $2::UUID ELSE FALSE END) WHERE campaigns.uuid = $1 ) INSERT INTO campaign_views (campaign_id, subscriber_id) VALUES((SELECT campaign_id FROM view), (SELECT subscriber_id FROM view));
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.444223385Z
    restimestampmock: 2023-11-03T03:02:44.444232009Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "50"
          parse:
            - name: "50"
              query: DELETE FROM campaigns WHERE id=$1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.44465727Z
    restimestampmock: 2023-11-03T03:02:44.444669061Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "51"
          parse:
            - name: "51"
              query: INSERT INTO media (uuid, filename, thumb, content_type, provider, meta, created_at) VALUES($1, $2, $3, $4, $5, $6, NOW()) RETURNING id;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
                - 25
                - 25
                - 25
                - 3802
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16624, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.445067698Z
    restimestampmock: 2023-11-03T03:02:44.445084239Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "52"
          parse:
            - name: "52"
              query: SELECT * FROM media WHERE CASE WHEN $1 > 0 THEN id = $1 ELSE uuid = $2 END;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16624, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16624, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [112, 114, 111, 118, 105, 100, 101, 114], table_oid: 16624, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 105, 108, 101, 110, 97, 109, 101], table_oid: 16624, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16624, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 104, 117, 109, 98], table_oid: 16624, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 116, 97], table_oid: 16624, table_attribute_number: 7, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16624, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.445462878Z
    restimestampmock: 2023-11-03T03:02:44.445478252Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "53"
          parse:
            - name: "53"
              query: SELECT COUNT(*) OVER () AS total, * FROM media WHERE ($1 = '' OR filename ILIKE $1) AND provider=$2 ORDER BY created_at DESC OFFSET $3 LIMIT $4;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 25
                - 25
                - 20
                - 20
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [116, 111, 116, 97, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [105, 100], table_oid: 16624, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16624, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [112, 114, 111, 118, 105, 100, 101, 114], table_oid: 16624, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 105, 108, 101, 110, 97, 109, 101], table_oid: 16624, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16624, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 104, 117, 109, 98], table_oid: 16624, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 116, 97], table_oid: 16624, table_attribute_number: 7, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16624, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.446177493Z
    restimestampmock: 2023-11-03T03:02:44.446203657Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "54"
          parse:
            - name: "54"
              query: DELETE FROM media WHERE id=$1 RETURNING filename;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [102, 105, 108, 101, 110, 97, 109, 101], table_oid: 16624, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.447144797Z
    restimestampmock: 2023-11-03T03:02:44.447202252Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "55"
          parse:
            - name: "55"
              query: INSERT INTO templates (name, type, subject, body) VALUES($1, $2, $3, $4) RETURNING id;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 25
                - 16454
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16524, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.44770484Z
    restimestampmock: 2023-11-03T03:02:44.447715089Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "56"
          parse:
            - name: "56"
              query: SELECT id, name, type, subject, (CASE WHEN $2 = false THEN body ELSE '' END) as body, is_default, created_at, updated_at FROM templates WHERE ($1 = 0 OR id = $1) AND ($3 = '' OR type = $3::template_type) ORDER BY created_at;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 16
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16524, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16524, table_attribute_number: 2, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16524, table_attribute_number: 3, data_type_oid: 16454, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16524, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [105, 115, 95, 100, 101, 102, 97, 117, 108, 116], table_oid: 16524, table_attribute_number: 6, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16524, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16524, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.448220636Z
    restimestampmock: 2023-11-03T03:02:44.448240259Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "57"
          parse:
            - name: "57"
              query: UPDATE templates SET name=(CASE WHEN $2 != '' THEN $2 ELSE name END), subject=(CASE WHEN $3 != '' THEN $3 ELSE name END), body=(CASE WHEN $4 != '' THEN $4 ELSE body END), updated_at=NOW() WHERE id = $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.448798177Z
    restimestampmock: 2023-11-03T03:02:44.448814093Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "58"
          parse:
            - name: "58"
              query: WITH u AS ( UPDATE templates SET is_default=true WHERE id=$1 AND type='campaign' RETURNING id ) UPDATE templates SET is_default=false WHERE id != $1;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.449259352Z
    restimestampmock: 2023-11-03T03:02:44.449284975Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "59"
          parse:
            - name: "59"
              query: WITH tpl AS ( DELETE FROM templates WHERE id = $1 AND (SELECT COUNT(id) FROM templates) > 1 AND is_default = false RETURNING id ), def AS ( SELECT id FROM templates WHERE is_default = true AND type='campaign' LIMIT 1 ), up AS ( UPDATE campaigns SET template_id = (SELECT id FROM def) WHERE (SELECT id FROM tpl) > 0 AND template_id = $1 ) SELECT id FROM tpl;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16524, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.450039879Z
    restimestampmock: 2023-11-03T03:02:44.450080667Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "60"
          parse:
            - name: "60"
              query: INSERT INTO links (uuid, url) VALUES($1, $2) ON CONFLICT (url) DO UPDATE SET url=EXCLUDED.url RETURNING uuid;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [117, 117, 105, 100], table_oid: 16660, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.450514886Z
    restimestampmock: 2023-11-03T03:02:44.450538384Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "61"
          parse:
            - name: "61"
              query: WITH link AS( SELECT id, url FROM links WHERE uuid = $1 ) INSERT INTO link_clicks (campaign_id, subscriber_id, link_id) VALUES( (SELECT id FROM campaigns WHERE uuid = $2), (SELECT id FROM subscribers WHERE (CASE WHEN $3::TEXT != '' THEN subscribers.uuid = $3::UUID ELSE FALSE END) ), (SELECT id FROM link) ) RETURNING (SELECT url FROM link);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 2950
                - 2950
                - 25
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [117, 114, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.451066179Z
    restimestampmock: 2023-11-03T03:02:44.451090677Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "62"
          parse:
            - name: "62"
              query: SELECT JSON_OBJECT_AGG(key, value) AS settings FROM ( SELECT * FROM settings ORDER BY key ) t;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [115, 101, 116, 116, 105, 110, 103, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.451476482Z
    restimestampmock: 2023-11-03T03:02:44.451493481Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "63"
          parse:
            - name: "63"
              query: UPDATE settings AS s SET value = c.value FROM(SELECT * FROM JSONB_EACH($1)) AS c(key, value) WHERE s.key = c.key;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 3802
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.452105062Z
    restimestampmock: 2023-11-03T03:02:44.452121894Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "64"
          parse:
            - name: "64"
              query: WITH sub AS ( SELECT id, status FROM subscribers WHERE CASE WHEN $1 != '' THEN uuid = $1::UUID ELSE email = $2 END ), camp AS ( SELECT id FROM campaigns WHERE $3 != '' AND uuid = $3::UUID ), num AS ( SELECT COUNT(*) + 1 AS num FROM bounces WHERE subscriber_id = (SELECT id FROM sub) AND type = $4 ), block1 AS ( UPDATE subscribers SET status='blocklisted' WHERE $9 = 'blocklist' AND (SELECT num FROM num) >= $8 AND id = (SELECT id FROM sub) AND (SELECT status FROM sub) != 'blocklisted' ), block2 AS ( UPDATE subscriber_lists SET status='unsubscribed' WHERE $9 = 'unsubscribe' AND (SELECT num FROM num) >= $8 AND subscriber_id = (SELECT id FROM sub) AND (SELECT status FROM sub) != 'blocklisted' ), bounce AS ( INSERT INTO bounces (subscriber_id, campaign_id, type, source, meta, created_at) SELECT (SELECT id FROM sub), (SELECT id FROM camp), $4, $5, $6, $7 WHERE NOT EXISTS (SELECT 1 WHERE (SELECT status FROM sub) = 'blocklisted' OR (SELECT num FROM num) > $8) ) DELETE FROM subscribers WHERE $9 = 'delete' AND (SELECT num FROM num) >= $8 AND id = (SELECT id FROM sub);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 25
                - 25
                - 25
                - 16446
                - 25
                - 3802
                - 1184
                - 20
                - 25
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.452769305Z
    restimestampmock: 2023-11-03T03:02:44.452819676Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "65"
          parse:
            - name: "65"
              query: DELETE FROM bounces WHERE CARDINALITY($1::INT[]) = 0 OR id = ANY($1);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.453354554Z
    restimestampmock: 2023-11-03T03:02:44.453405342Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "66"
          parse:
            - name: "66"
              query: WITH sub AS ( SELECT id FROM subscribers WHERE CASE WHEN $1 > 0 THEN id = $1 ELSE uuid = $2 END ) DELETE FROM bounces WHERE subscriber_id = (SELECT id FROM sub);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, "n", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 2950
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.453895723Z
    restimestampmock: 2023-11-03T03:02:44.453912597Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "56"
              parameters: [[48], [102, 97, 108, 115, 101], [116, 120]]
              result_format_codes: [1, 0, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAANygAIAAAABAAAAAMAAAAdU2FtcGxlIHRyYW5zYWN0aW9uYWwgdGVtcGxhdGUAAAACdHgAAAAeV2VsY29tZSB7eyAuU3Vic2NyaWJlci5OYW1lIH19AAANKDwhZG9jdHlwZSBodG1sPgo8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIG1pbmltdW0tc2NhbGU9MSI+CiAgICAgICAgPGJhc2UgdGFyZ2V0PSJfYmxhbmsiPgoKICAgICAgICA8c3R5bGU+CiAgICAgICAgICAgIGJvZHkgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0YwRjFGMzsKICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCAnU2Vnb2UgVUknLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE1cHg7CiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjZweDsKICAgICAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgICAgIGNvbG9yOiAjNDQ0OwogICAgICAgICAgICB9CgogICAgICAgICAgICBwcmUgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2Y0ZjRmNGY0OwogICAgICAgICAgICAgICAgcGFkZGluZzogMnB4OwogICAgICAgICAgICB9CgogICAgICAgICAgICB0YWJsZSB7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGFibGUgdGQgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjZGRkOwogICAgICAgICAgICAgICAgcGFkZGluZzogNXB4OwogICAgICAgICAgICB9CgogICAgICAgICAgICAud3JhcCB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogICAgICAgICAgICAgICAgcGFkZGluZzogMzBweDsKICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTI1cHg7CiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmJ1dHRvbiB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDA1NWQ0OwogICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7CiAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50OwogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDMwcHg7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmJ1dHRvbjpob3ZlciB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMTExOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuZm9vdGVyIHsKICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsKICAgICAgICAgICAgICAgIGNvbG9yOiAjODg4OwogICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAuZm9vdGVyIGEgewogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjODg4OwogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4OwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmd1dHRlciB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAzMHB4OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpbWcgewogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvOwogICAgICAgICAgICB9CgogICAgICAgICAgICBhIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAjMDA1NWQ0OwogICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBhOmhvdmVyIHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzExMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICAgICAgICAgICAgICAgIC53cmFwIHsKICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IGF1dG87CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAuZ3V0dGVyIHsKICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNGMEYxRjM7Zm9udC1mYW1pbHk6ICdIZWx2ZXRpY2EgTmV1ZScsICdTZWdvZSBVSScsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtmb250LXNpemU6IDE1cHg7bGluZS1oZWlnaHQ6IDI2cHg7bWFyZ2luOiAwO2NvbG9yOiAjNDQ0OyI+CiAgICA8ZGl2IGNsYXNzPSJndXR0ZXIiIHN0eWxlPSJwYWRkaW5nOiAzMHB4OyI+Jm5ic3A7PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJ3cmFwIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtwYWRkaW5nOiAzMHB4O21heC13aWR0aDogNTI1cHg7bWFyZ2luOiAwIGF1dG87Ym9yZGVyLXJhZGl1czogNXB4OyI+CiAgICAgICAgPHA+SGVsbG8ge3sgLlN1YnNjcmliZXIuTmFtZSB9fTwvcD4KICAgICAgICA8cD4KICAgICAgICAgICAgPHN0cm9uZz5PcmRlciBudW1iZXI6IDwvc3Ryb25nPiB7eyAuVHguRGF0YS5vcmRlcl9pZCB9fTxiciAvPgogICAgICAgICAgICA8c3Ryb25nPlNoaXBwaW5nIGRhdGU6IDwvc3Ryb25nPiB7eyAuVHguRGF0YS5zaGlwcGluZ19kYXRlIH19PGJyIC8+CiAgICAgICAgPC9wPgogICAgICAgIDxiciAvPgogICAgICAgIDxwPgogICAgICAgICAgICBUcmFuc2FjdGlvbmFsIHRlbXBsYXRlcyBzdXBwb3J0cyBhcmJpdHJhcnkgcGFyYW1ldGVycy4KICAgICAgICAgICAgUmVuZGVyIHRoZW0gdXNpbmcgPGNvZGU+LlR4LkRhdGEuWW91clBhcmFtTmFtZTwvY29kZT4uIEZvciBtb3JlIGluZm9ybWF0aW9uLAogICAgICAgICAgICBzZWUgdGhlIHRyYW5zYWN0aW9uYWwgbWFpbGluZyA8YSBocmVmPSJodHRwczovL2xpc3Rtb25rLmFwcC9kb2NzL3RyYW5zYWN0aW9uYWwiPmRvY3VtZW50YXRpb248L2E+LgogICAgICAgIDwvcD4KICAgIDwvZGl2PgogICAgCiAgICA8ZGl2IGNsYXNzPSJmb290ZXIiIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Zm9udC1zaXplOiAxMnB4O2NvbG9yOiAjODg4OyI+CiAgICAgICAgPHA+e3sgTC5UICJwdWJsaWMucG93ZXJlZEJ5IiB9fSA8YSBocmVmPSJodHRwczovL2xpc3Rtb25rLmFwcCIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjogIzg4ODsiPmxpc3Rtb25rPC9hPjwvcD4KICAgIDwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4KAAAAAWYAAAAdMjAyMy0xMC0yNyAwNjo0OTowOS4xODMzNzUrMDAAAAAdMjAyMy0xMC0yNyAwNjo0OTowOS4xODMzNzUrMDBDAAAADVNFTEVDVCAxAFoAAAAFSQ==
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAAw==', Sample transactional template, tx, 'Welcome {{ .Subscriber.Name }}', "<!doctype html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1\">\n        <base target=\"_blank\">\n\n        <style>\n            body {\n                background-color: #F0F1F3;\n                font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;\n                font-size: 15px;\n                line-height: 26px;\n                margin: 0;\n                color: #444;\n            }\n\n            pre {\n                background: #f4f4f4f4;\n                padding: 2px;\n            }\n\n            table {\n                width: 100%;\n                border: 1px solid #ddd;\n            }\n            table td {\n                border-color: #ddd;\n                padding: 5px;\n            }\n\n            .wrap {\n                background-color: #fff;\n                padding: 30px;\n                max-width: 525px;\n                margin: 0 auto;\n                border-radius: 5px;\n            }\n\n            .button {\n                background: #0055d4;\n                border-radius: 3px;\n                text-decoration: none !important;\n                color: #fff !important;\n                font-weight: bold;\n                padding: 10px 30px;\n                display: inline-block;\n            }\n            .button:hover {\n                background: #111;\n            }\n\n            .footer {\n                text-align: center;\n                font-size: 12px;\n                color: #888;\n            }\n                .footer a {\n                    color: #888;\n                    margin-right: 5px;\n                }\n\n            .gutter {\n                padding: 30px;\n            }\n\n            img {\n                max-width: 100%;\n                height: auto;\n            }\n\n            a {\n                color: #0055d4;\n            }\n                a:hover {\n                    color: #111;\n                }\n            @media screen and (max-width: 600px) {\n                .wrap {\n                    max-width: auto;\n                }\n                .gutter {\n                    padding: 10px;\n                }\n            }\n        </style>\n    </head>\n<body style=\"background-color: #F0F1F3;font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;font-size: 15px;line-height: 26px;margin: 0;color: #444;\">\n    <div class=\"gutter\" style=\"padding: 30px;\">&nbsp;</div>\n    <div class=\"wrap\" style=\"background-color: #fff;padding: 30px;max-width: 525px;margin: 0 auto;border-radius: 5px;\">\n        <p>Hello {{ .Subscriber.Name }}</p>\n        <p>\n            <strong>Order number: </strong> {{ .Tx.Data.order_id }}<br />\n            <strong>Shipping date: </strong> {{ .Tx.Data.shipping_date }}<br />\n        </p>\n        <br />\n        <p>\n            Transactional templates supports arbitrary parameters.\n            Render them using <code>.Tx.Data.YourParamName</code>. For more information,\n            see the transactional mailing <a href=\"https://listmonk.app/docs/transactional\">documentation</a>.\n        </p>\n    </div>\n    \n    <div class=\"footer\" style=\"text-align: center;font-size: 12px;color: #888;\">\n        <p>{{ L.T \"public.poweredBy\" }} <a href=\"https://listmonk.app\" target=\"_blank\" style=\"color: #888;\">listmonk</a></p>\n    </div>\n</body>\n</html>\n", f, '2023-10-27 06:49:09.183375+00', '2023-10-27 06:49:09.183375+00']}, {_: [], row_values: ['base64:AAAAAw==', Sample transactional template, tx, 'Welcome {{ .Subscriber.Name }}', "<!doctype html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1\">\n        <base target=\"_blank\">\n\n        <style>\n            body {\n                background-color: #F0F1F3;\n                font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;\n                font-size: 15px;\n                line-height: 26px;\n                margin: 0;\n                color: #444;\n            }\n\n            pre {\n                background: #f4f4f4f4;\n                padding: 2px;\n            }\n\n            table {\n                width: 100%;\n                border: 1px solid #ddd;\n            }\n            table td {\n                border-color: #ddd;\n                padding: 5px;\n            }\n\n            .wrap {\n                background-color: #fff;\n                padding: 30px;\n                max-width: 525px;\n                margin: 0 auto;\n                border-radius: 5px;\n            }\n\n            .button {\n                background: #0055d4;\n                border-radius: 3px;\n                text-decoration: none !important;\n                color: #fff !important;\n                font-weight: bold;\n                padding: 10px 30px;\n                display: inline-block;\n            }\n            .button:hover {\n                background: #111;\n            }\n\n            .footer {\n                text-align: center;\n                font-size: 12px;\n                color: #888;\n            }\n                .footer a {\n                    color: #888;\n                    margin-right: 5px;\n                }\n\n            .gutter {\n                padding: 30px;\n            }\n\n            img {\n                max-width: 100%;\n                height: auto;\n            }\n\n            a {\n                color: #0055d4;\n            }\n                a:hover {\n                    color: #111;\n                }\n            @media screen and (max-width: 600px) {\n                .wrap {\n                    max-width: auto;\n                }\n                .gutter {\n                    padding: 10px;\n                }\n            }\n        </style>\n    </head>\n<body style=\"background-color: #F0F1F3;font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;font-size: 15px;line-height: 26px;margin: 0;color: #444;\">\n    <div class=\"gutter\" style=\"padding: 30px;\">&nbsp;</div>\n    <div class=\"wrap\" style=\"background-color: #fff;padding: 30px;max-width: 525px;margin: 0 auto;border-radius: 5px;\">\n        <p>Hello {{ .Subscriber.Name }}</p>\n        <p>\n            <strong>Order number: </strong> {{ .Tx.Data.order_id }}<br />\n            <strong>Shipping date: </strong> {{ .Tx.Data.shipping_date }}<br />\n        </p>\n        <br />\n        <p>\n            Transactional templates supports arbitrary parameters.\n            Render them using <code>.Tx.Data.YourParamName</code>. For more information,\n            see the transactional mailing <a href=\"https://listmonk.app/docs/transactional\">documentation</a>.\n        </p>\n    </div>\n    \n    <div class=\"footer\" style=\"text-align: center;font-size: 12px;color: #888;\">\n        <p>{{ L.T \"public.poweredBy\" }} <a href=\"https://listmonk.app\" target=\"_blank\" style=\"color: #888;\">listmonk</a></p>\n    </div>\n</body>\n</html>\n", f, '2023-10-27 06:49:09.183375+00', '2023-10-27 06:49:09.183375+00']}, {_: [], row_values: ['base64:AAAAAw==', Sample transactional template, tx, 'Welcome {{ .Subscriber.Name }}', "<!doctype html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1\">\n        <base target=\"_blank\">\n\n        <style>\n            body {\n                background-color: #F0F1F3;\n                font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;\n                font-size: 15px;\n                line-height: 26px;\n                margin: 0;\n                color: #444;\n            }\n\n            pre {\n                background: #f4f4f4f4;\n                padding: 2px;\n            }\n\n            table {\n                width: 100%;\n                border: 1px solid #ddd;\n            }\n            table td {\n                border-color: #ddd;\n                padding: 5px;\n            }\n\n            .wrap {\n                background-color: #fff;\n                padding: 30px;\n                max-width: 525px;\n                margin: 0 auto;\n                border-radius: 5px;\n            }\n\n            .button {\n                background: #0055d4;\n                border-radius: 3px;\n                text-decoration: none !important;\n                color: #fff !important;\n                font-weight: bold;\n                padding: 10px 30px;\n                display: inline-block;\n            }\n            .button:hover {\n                background: #111;\n            }\n\n            .footer {\n                text-align: center;\n                font-size: 12px;\n                color: #888;\n            }\n                .footer a {\n                    color: #888;\n                    margin-right: 5px;\n                }\n\n            .gutter {\n                padding: 30px;\n            }\n\n            img {\n                max-width: 100%;\n                height: auto;\n            }\n\n            a {\n                color: #0055d4;\n            }\n                a:hover {\n                    color: #111;\n                }\n            @media screen and (max-width: 600px) {\n                .wrap {\n                    max-width: auto;\n                }\n                .gutter {\n                    padding: 10px;\n                }\n            }\n        </style>\n    </head>\n<body style=\"background-color: #F0F1F3;font-family: 'Helvetica Neue', 'Segoe UI', Helvetica, sans-serif;font-size: 15px;line-height: 26px;margin: 0;color: #444;\">\n    <div class=\"gutter\" style=\"padding: 30px;\">&nbsp;</div>\n    <div class=\"wrap\" style=\"background-color: #fff;padding: 30px;max-width: 525px;margin: 0 auto;border-radius: 5px;\">\n        <p>Hello {{ .Subscriber.Name }}</p>\n        <p>\n            <strong>Order number: </strong> {{ .Tx.Data.order_id }}<br />\n            <strong>Shipping date: </strong> {{ .Tx.Data.shipping_date }}<br />\n        </p>\n        <br />\n        <p>\n            Transactional templates supports arbitrary parameters.\n            Render them using <code>.Tx.Data.YourParamName</code>. For more information,\n            see the transactional mailing <a href=\"https://listmonk.app/docs/transactional\">documentation</a>.\n        </p>\n    </div>\n    \n    <div class=\"footer\" style=\"text-align: center;font-size: 12px;color: #888;\">\n        <p>{{ L.T \"public.poweredBy\" }} <a href=\"https://listmonk.app\" target=\"_blank\" style=\"color: #888;\">listmonk</a></p>\n    </div>\n</body>\n</html>\n", f, '2023-10-27 06:49:09.183375+00', '2023-10-27 06:49:09.183375+00']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.456019402Z
    restimestampmock: 2023-11-03T03:02:44.456059858Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: SELECT JSON_BUILD_OBJECT('version', (SELECT VERSION()), 'size_mb', (SELECT ROUND(pg_database_size((SELECT CURRENT_DATABASE()))/(1024^2)))) AS info;
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [T, D, C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['{"version" : "PostgreSQL 13.12 (Debian 13.12-1.pgdg120+1) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit", "size_mb" : 9}']}, {_: [], row_values: ['{"version" : "PostgreSQL 13.12 (Debian 13.12-1.pgdg120+1) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit", "size_mb" : 9}']}, {_: [], row_values: ['{"version" : "PostgreSQL 13.12 (Debian 13.12-1.pgdg120+1) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit", "size_mb" : 9}']}]
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 110, 102, 111], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:44.457870518Z
    restimestampmock: 2023-11-03T03:02:44.457894932Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:49.472527587Z
    restimestampmock: 2023-11-03T03:02:49.472679576Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:54.470690461Z
    restimestampmock: 2023-11-03T03:02:54.470849199Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:02:59.468044476Z
    restimestampmock: 2023-11-03T03:02:59.468237294Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:04.464462509Z
    restimestampmock: 2023-11-03T03:03:04.464550461Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:09.465468788Z
    restimestampmock: 2023-11-03T03:03:09.4655202Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:14.46672828Z
    restimestampmock: 2023-11-03T03:03:14.466960719Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:19.465113545Z
    restimestampmock: 2023-11-03T03:03:19.465243159Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:24.470697223Z
    restimestampmock: 2023-11-03T03:03:24.470826045Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:29.464349228Z
    restimestampmock: 2023-11-03T03:03:29.464495215Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:34.4617648Z
    restimestampmock: 2023-11-03T03:03:34.46185625Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:39.464133865Z
    restimestampmock: 2023-11-03T03:03:39.464201359Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:44.460573049Z
    restimestampmock: 2023-11-03T03:03:44.460648792Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: BEGIN READ ONLY
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 66
                - 69
                - 71
                - 73
                - 78
          ready_for_query:
            txstatus: 84
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.702059496Z
    restimestampmock: 2023-11-03T03:03:46.702232897Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: SELECT COUNT(*) AS total FROM subscribers LEFT JOIN subscriber_lists ON ( (CASE WHEN CARDINALITY($1::INT[]) > 0 THEN true ELSE false END) AND subscriber_lists.subscriber_id = subscribers.id ) WHERE (CARDINALITY($1) = 0 OR subscriber_lists.list_id = ANY($1::INT[])) ;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 84
          row_description: {fields: [{name: [116, 111, 116, 97, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.70425225Z
    restimestampmock: 2023-11-03T03:03:46.704344783Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - parameters: [[123, 125]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAAEgABAAAACAAAAAAAAAAYQwAAAA1TRUxFQ1QgMQBaAAAABVQ=
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAAAAAABg=']}, {_: [], row_values: ['base64:AAAAAAAAABg=']}, {_: [], row_values: ['base64:AAAAAAAAABg=']}]
          ready_for_query:
            txstatus: 84
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.707823626Z
    restimestampmock: 2023-11-03T03:03:46.707921325Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          payload: UAAAAWQAU0VMRUNUIHN1YnNjcmliZXJzLiogRlJPTSBzdWJzY3JpYmVycyBMRUZUIEpPSU4gc3Vic2NyaWJlcl9saXN0cyBPTiAoIChDQVNFIFdIRU4gQ0FSRElOQUxJVFkoJDE6OklOVFtdKSA+IDAgVEhFTiB0cnVlIEVMU0UgZmFsc2UgRU5EKSBBTkQgc3Vic2NyaWJlcl9saXN0cy5zdWJzY3JpYmVyX2lkID0gc3Vic2NyaWJlcnMuaWQgKSBXSEVSRSAoQ0FSRElOQUxJVFkoJDEpID0gMCBPUiBzdWJzY3JpYmVyX2xpc3RzLmxpc3RfaWQgPSBBTlkoJDE6OklOVFtdKSkgIE9SREVSIEJZIHN1YnNjcmliZXJzLmlkIGRlc2MgT0ZGU0VUICQyIExJTUlUIChDQVNFIFdIRU4gJDMgPCAxIFRIRU4gTlVMTCBFTFNFICQzIEVORCk7AAAARAAAAAZTAFMAAAAE
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: SELECT subscribers.* FROM subscribers LEFT JOIN subscriber_lists ON ( (CASE WHEN CARDINALITY($1::INT[]) > 0 THEN true ELSE false END) AND subscriber_lists.subscriber_id = subscribers.id ) WHERE (CARDINALITY($1) = 0 OR subscriber_lists.list_id = ANY($1::INT[])) ORDER BY subscribers.id desc OFFSET $2 LIMIT (CASE WHEN $3 < 1 THEN NULL ELSE $3 END);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
                - 20
                - 23
          ready_for_query:
            txstatus: 84
          row_description: {fields: [{name: [105, 100], table_oid: 16461, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16461, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [101, 109, 97, 105, 108], table_oid: 16461, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16461, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 116, 116, 114, 105, 98, 115], table_oid: 16461, table_attribute_number: 5, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16461, table_attribute_number: 6, data_type_oid: 16400, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 7, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16461, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.709809233Z
    restimestampmock: 2023-11-03T03:03:46.70990539Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - identifier: StartupRequest
          length: 102
          payload: AAAAZgADAABjbGllbnRfZW5jb2RpbmcAVVRGOABkYXRlc3R5bGUASVNPLCBNRFkAdXNlcgBsaXN0bW9uawBkYXRhYmFzZQBsaXN0bW9uawBleHRyYV9mbG9hdF9kaWdpdHMAMgAA
          startup_message:
            protocolversion: 196608
            parameters:
                client_encoding: UTF8
                database: listmonk
                datestyle: ISO, MDY
                extra_float_digits: "2"
                user: listmonk
          auth_type: 0
    postgresresponses:
        - header: [R]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 10
                - 191
                - 198
                - 169
          msg_type: 82
          auth_type: 5
    reqtimestampmock: 2023-11-03T03:03:46.717212501Z
    restimestampmock: 2023-11-03T03:03:46.722405268Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [p]
          identifier: ClientRequest
          length: 102
          password_message:
            password: md586627ed0edb8ac9d8071d248786051df
          msg_type: 112
          auth_type: 0
    postgresresponses:
        - header: [R, S, S, S, S, S, S, S, S, S, S, S, K, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          backend_key_data:
            process_id: 91
            secret_key: 3831032323
          parameter_status:
            - name: application_name
              value: ""
            - name: client_encoding
              value: UTF8
            - name: DateStyle
              value: ISO, MDY
            - name: integer_datetimes
              value: "on"
            - name: IntervalStyle
              value: postgres
            - name: is_superuser
              value: "on"
            - name: server_encoding
              value: UTF8
            - name: server_version
              value: 13.12 (Debian 13.12-1.pgdg120+1)
            - name: session_authorization
              value: listmonk
            - name: standard_conforming_strings
              value: "on"
            - name: TimeZone
              value: Etc/UTC
            - name: TimeZone
              value: Etc/UTC
            - name: TimeZone
              value: Etc/UTC
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.725061479Z
    restimestampmock: 2023-11-03T03:03:46.725194841Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "1"
          parse:
            - name: "1"
              query: WITH subs AS ( SELECT subscriber_id, JSON_AGG( ROW_TO_JSON( (SELECT l FROM ( SELECT subscriber_lists.status AS subscription_status, subscriber_lists.created_at AS subscription_created_at, subscriber_lists.updated_at AS subscription_updated_at, subscriber_lists.meta AS subscription_meta, lists.* ) l) ) ) AS lists FROM lists LEFT JOIN subscriber_lists ON (subscriber_lists.list_id = lists.id) WHERE subscriber_lists.subscriber_id = ANY($1) GROUP BY subscriber_id ) SELECT id as subscriber_id, COALESCE(s.lists, '[]') AS lists FROM (SELECT id FROM UNNEST($1) AS id) x LEFT JOIN subs AS s ON (s.subscriber_id = id) ORDER BY ARRAY_POSITION($1, id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.727970291Z
    restimestampmock: 2023-11-03T03:03:46.728010246Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - parameters: [[123, 125], [48], [49, 48, 48]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAA6gAIAAAABAAAACIAAAAQ1hy4QkNdQtauxIrmVW0ZLwAAABVzdWJzcmliZXI5QGRvbWFpbi5jb20AAAAOVGhlIFN1YnNjcmliZXIAAABOeyJjaXR5IjogIkJlbmdhbHVydSIsICJzdGFjayI6IHsibGFuZ3VhZ2VzIjogWyJnbyIsICJweXRob24iXX0sICJwcm9qZWN0cyI6IDN9AAAAB2VuYWJsZWQAAAAcMjAyMy0xMC0zMSAwMjo1NTo0NC44MDgzMyswMAAAABwyMDIzLTEwLTMxIDAyOjU1OjQ0LjgwODMzKzAwRAAAAOsACAAAAAQAAAAfAAAAEFzlPK08S0E2uZapsPXde2wAAAAUc3Vic3JpYmVyQGRvbWFpbi5jb20AAAAOVGhlIFN1YnNjcmliZXIAAABOeyJjaXR5IjogIkJlbmdhbHVydSIsICJzdGFjayI6IHsibGFuZ3VhZ2VzIjogWyJnbyIsICJweXRob24iXX0sICJwcm9qZWN0cyI6IDN9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOSAwNToxNjozMC42MzE2NDUrMDAAAAAdMjAyMy0xMC0yOSAwNToxNjozMC42MzE2NDUrMDBEAAAA7AAIAAAABAAAAB0AAAAQiKxJl2k3TZuuvT7NBzWiHgAAABdzdWJzcmliZXIxMjNAZG9tYWluLmNvbQAAAA5UaGUgU3Vic2NyaWJlcgAAAE57ImNpdHkiOiAiQmVuZ2FsdXJ1IiwgInN0YWNrIjogeyJsYW5ndWFnZXMiOiBbImdvIiwgInB5dGhvbiJdfSwgInByb2plY3RzIjogM30AAAAHZW5hYmxlZAAAABwyMDIzLTEwLTI5IDA0OjIxOjA2LjUzNzI0KzAwAAAAHDIwMjMtMTAtMjkgMDQ6MjE6MDYuNTM3MjQrMDBEAAAAhgAIAAAABAAAABkAAAAQ1kgA2oTUS1uBln8n/LqCqgAAAAhmc0BmLmNvbQAAAAFmAAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOCAyMzo0NzowMy45NzAzMDIrMDAAAAAdMjAyMy0xMC0yOCAyMzo0NzowMy45NzAzMDIrMDBEAAAAigAIAAAABAAAABcAAAAQgJ/rBnIxR2+i9tL+ZWcwzwAAAAphc3N3QHEuY29tAAAAA3h5egAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjggMTA6NDk6MzcuMzAyMDk3KzAwAAAAHTIwMjMtMTAtMjggMTA6NDk6MzcuMzAyMDk3KzAwRAAAAIgACAAAAAQAAAAWAAAAEBNfcHrcKU2/owNcWR+6eakAAAAIc3NAcy5jb20AAAADeHl6AAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOCAwODozNzo1MS4xMTUxNTcrMDAAAAAdMjAyMy0xMC0yOCAwODozNzo1MS4xMTUxNTcrMDBEAAAAiwAIAAAABAAAABUAAAAQ+DXuZsK/Rf2vhD5CxbzN/AAAAAdzQG0uY29tAAAAB3Nhc2lpb24AAAACe30AAAAHZW5hYmxlZAAAAB0yMDIzLTEwLTI4IDA4OjI1OjEyLjgwNTQ5MyswMAAAAB0yMDIzLTEwLTI4IDA4OjI1OjEyLjgwNTQ5MyswMEQAAACGAAgAAAAEAAAAFAAAABBZ0WcYrKFLfZeNqwlqXerLAAAACHNAcy5tYWlsAAAAAXMAAAACe30AAAAHZW5hYmxlZAAAAB0yMDIzLTEwLTI4IDA4OjA0OjQ2LjI5MDE1MyswMAAAAB0yMDIzLTEwLTI4IDA4OjA0OjQ2LjI5MDE1MyswMEQAAACGAAgAAAAEAAAAEwAAABDjApOdrt1KooHFGsyU0kLtAAAACmFwaUBtLmNvbWEAAAABegAAAAJ7fQAAAAdlbmFibGVkAAAAHDIwMjMtMTAtMjggMDc6NTI6MjIuMTEzMzUrMDAAAAAcMjAyMy0xMC0yOCAwNzo1MjoyMi4xMTMzNSswMEQAAACKAAgAAAAEAAAAEQAAABCfxZ8uAx5EcZLYWNfQTXhVAAAACnJpdGlAay5jb20AAAADeHl6AAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOCAwNzo0MDo0My43MjQ2MjQrMDAAAAAdMjAyMy0xMC0yOCAwNzo0MDo0My43MjQ2MjQrMDBEAAAAmQAIAAAABAAAABAAAAAQlx8sbJFoRFiAUhf43eveggAAABhiYWxhdmlnaG5lc2gxNkBnbWFpbC5jb20AAAAEQmFsYQAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjggMDc6MTI6NTYuNjU5NDYyKzAwAAAAHTIwMjMtMTAtMjggMDc6MTI6NTYuNjU5NDYyKzAwRAAAAIcACAAAAAQAAAAPAAAAEFSxVlz2m0zJnMZ+UhXqHckAAAAJYXBpQG0uY29tAAAAAXgAAAACe30AAAAHZW5hYmxlZAAAAB0yMDIzLTEwLTI4IDA2OjQ3OjExLjU1NDE5MyswMAAAAB0yMDIzLTEwLTI4IDA2OjQ3OjExLjU1NDE5MyswMEQAAACWAAgAAAAEAAAADgAAABCyKWmboWxLs4TY/2Ms+oKJAAAAE3NoaWx2YXJhajJAbWFpbC5jb20AAAAIc2hpbHZyYWoAAAACe30AAAAHZW5hYmxlZAAAABwyMDIzLTEwLTI4IDA2OjM2OjM1Ljg2ODA4KzAwAAAAHDIwMjMtMTAtMjggMDY6MzY6MzUuODY4MDgrMDBEAAAAngAIAAAABAAAAA0AAAAQ9GirshXzSPCTy+hFgjzPUAAAABtrYXVzdHViaHNoYXJtYTEwNUBnbWFpbC5jb20AAAAIa2F1c3R1YmgAAAACe30AAAAHZW5hYmxlZAAAABwyMDIzLTEwLTI4IDA2OjI3OjI2LjY4Nzk3KzAwAAAAHDIwMjMtMTAtMjggMDY6Mjc6MjYuNjg3OTcrMDBEAAAAjQAIAAAABAAAAAwAAAAQnTtqX6gYT2a2fxRsxsJX3QAAAAt1andhbEBtLmNvbQAAAAV1andhbAAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjggMDY6MTc6MjkuNTQ2NTkxKzAwAAAAHTIwMjMtMTAtMjggMDY6MTc6MjkuNTQ2NTkxKzAwRAAAAJgACAAAAAQAAAALAAAAEBpexNfBmkwDk6fJW+kYTSIAAAARc2h1YmhhbmthckBtLmNvcG0AAAAKc2h1YmhhbmthcgAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjggMDY6MDc6NDQuNjM0NTA4KzAwAAAAHTIwMjMtMTAtMjggMDY6MDc6NDQuNjM0NTA4KzAwRAAAAJQACAAAAAQAAAAKAAAAEB9VKqMBfUhDk96mCK7liE4AAAAQcmFmaXF1ZUBtYWlsLmNvbQAAAAdyYWZpcXVlAAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOCAwNTo1Mzo1My44OTc0MTkrMDAAAAAdMjAyMy0xMC0yOCAwNTo1Mzo1My44OTc0MTkrMDBEAAAAjQAIAAAABAAAAAkAAAAQ33SA8f5QTG+9RDltRPfhvQAAAA1hcmp1bi9AZ2EuY29tAAAABWFyanVuAAAAAnt9AAAAB2VuYWJsZWQAAAAcMjAyMy0xMC0yOCAwNTozMTowMy40NjIyOSswMAAAABwyMDIzLTEwLTI4IDA1OjMxOjAzLjQ2MjI5KzAwRAAAAJEACAAAAAQAAAAIAAAAEE0c6eUCy0CLgQmYSaXFaUcAAAANc3dhc3Rpa0BtLmNvbQAAAAdzd2FzdGlrAAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yOCAwNDo0NjoxNC45NTUxMTYrMDAAAAAdMjAyMy0xMC0yOCAwNDo0NjoxNC45NTUxMTYrMDBEAAAAhwAIAAAABAAAAAcAAAAQOestVv3FR167ufquXygKlgAAAAhzZEBzLmNvbQAAAAJTZAAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjcgMTk6MTQ6MzIuODM0NDA1KzAwAAAAHTIwMjMtMTAtMjcgMTk6MTQ6MzIuODM0NDA1KzAwRAAAAIUACAAAAAQAAAAGAAAAEFRHwb4NiEAJqwdlfLPElw8AAAAHZkBmLmNvbQAAAAFmAAAAAnt9AAAAB2VuYWJsZWQAAAAdMjAyMy0xMC0yNyAxOTowNzowNi4wMzQyOTYrMDAAAAAdMjAyMy0xMC0yNyAxOTowNzowNi4wMzQyOTYrMDBEAAAAkwAIAAAABAAAAAUAAAAQEFxWNUjcTruXIVpTIJA8igAAAAtkQGdtYWlsLmNvbQAAAAtkQGdtYWlsLmNvbQAAAAJ7fQAAAAdlbmFibGVkAAAAHTIwMjMtMTAtMjcgMTg6MzI6MjYuODM3MzAyKzAwAAAAHTIwMjMtMTAtMjcgMTg6MzI6MjYuODM3MzAyKzAwRAAAAMkACAAAAAQAAAACAAAAEMqQrLiZ8kl0gFDyWKMgUBMAAAAQYW5vbkBleGFtcGxlLmNvbQAAAAhBbm9uIERvZQAAADZ7ImNpdHkiOiAiQmVuZ2FsdXJ1IiwgImdvb2QiOiB0cnVlLCAidHlwZSI6ICJ1bmtub3duIn0AAAAHZW5hYmxlZAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3OTYyNyswMAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3OTYyNyswMEQAAADKAAgAAAAEAAAAAQAAABAdaVk8v4hARY+kH48VUZp5AAAAEGpvaG5AZXhhbXBsZS5jb20AAAAISm9obiBEb2UAAAA0eyJjaXR5IjogIkJlbmdhbHVydSIsICJnb29kIjogdHJ1ZSwgInR5cGUiOiAia25vd24ifQAAAAtibG9ja2xpc3RlZAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3ODQ0OSswMAAAABwyMDIzLTExLTAzIDAyOjU4OjQzLjMwNTI4KzAwQwAAAA5TRUxFQ1QgMjQAWgAAAAVU
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 50
                - 52
          data_row: [{_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00', 'base64:AAAABQ==', 'base64:EFxWNUjcTruXIVpTIJA8ig==', d@gmail.com, d@gmail.com, '{}', enabled, '2023-10-27 18:32:26.837302+00', '2023-10-27 18:32:26.837302+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00', 'base64:AAAABQ==', 'base64:EFxWNUjcTruXIVpTIJA8ig==', d@gmail.com, d@gmail.com, '{}', enabled, '2023-10-27 18:32:26.837302+00', '2023-10-27 18:32:26.837302+00', 'base64:AAAAAg==', 'base64:ypCsuJnySXSAUPJYoyBQEw==', anon@example.com, Anon Doe, '{"city": "Bengaluru", "good": true, "type": "unknown"}', enabled, '2023-10-27 06:49:09.179627+00', '2023-10-27 06:49:09.179627+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00', 'base64:AAAABQ==', 'base64:EFxWNUjcTruXIVpTIJA8ig==', d@gmail.com, d@gmail.com, '{}', enabled, '2023-10-27 18:32:26.837302+00', '2023-10-27 18:32:26.837302+00', 'base64:AAAAAg==', 'base64:ypCsuJnySXSAUPJYoyBQEw==', anon@example.com, Anon Doe, '{"city": "Bengaluru", "good": true, "type": "unknown"}', enabled, '2023-10-27 06:49:09.179627+00', '2023-10-27 06:49:09.179627+00', 'base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00', 'base64:AAAABQ==', 'base64:EFxWNUjcTruXIVpTIJA8ig==', d@gmail.com, d@gmail.com, '{}', enabled, '2023-10-27 18:32:26.837302+00', '2023-10-27 18:32:26.837302+00', 'base64:AAAAAg==', 'base64:ypCsuJnySXSAUPJYoyBQEw==', anon@example.com, Anon Doe, '{"city": "Bengaluru", "good": true, "type": "unknown"}', enabled, '2023-10-27 06:49:09.179627+00', '2023-10-27 06:49:09.179627+00', 'base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}, {_: [], row_values: ['base64:AAAAIg==', 'base64:1hy4QkNdQtauxIrmVW0ZLw==', subsriber9@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-31 02:55:44.80833+00', '2023-10-31 02:55:44.80833+00', 'base64:AAAAHw==', 'base64:XOU8rTxLQTa5lqmw9d17bA==', subsriber@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 05:16:30.631645+00', '2023-10-29 05:16:30.631645+00', 'base64:AAAAHQ==', 'base64:iKxJl2k3TZuuvT7NBzWiHg==', subsriber123@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-10-29 04:21:06.53724+00', '2023-10-29 04:21:06.53724+00', 'base64:AAAAGQ==', 'base64:1kgA2oTUS1uBln8n/LqCqg==', fs@f.com, f, '{}', enabled, '2023-10-28 23:47:03.970302+00', '2023-10-28 23:47:03.970302+00', 'base64:AAAAFw==', 'base64:gJ/rBnIxR2+i9tL+ZWcwzw==', assw@q.com, xyz, '{}', enabled, '2023-10-28 10:49:37.302097+00', '2023-10-28 10:49:37.302097+00', 'base64:AAAAFg==', 'base64:E19wetwpTb+jA1xZH7p5qQ==', ss@s.com, xyz, '{}', enabled, '2023-10-28 08:37:51.115157+00', '2023-10-28 08:37:51.115157+00', 'base64:AAAAFQ==', 'base64:+DXuZsK/Rf2vhD5CxbzN/A==', s@m.com, sasiion, '{}', enabled, '2023-10-28 08:25:12.805493+00', '2023-10-28 08:25:12.805493+00', 'base64:AAAAFA==', 'base64:WdFnGKyhS32XjasJal3qyw==', s@s.mail, s, '{}', enabled, '2023-10-28 08:04:46.290153+00', '2023-10-28 08:04:46.290153+00', 'base64:AAAAEw==', 'base64:4wKTna7dSqKBxRrMlNJC7Q==', api@m.coma, z, '{}', enabled, '2023-10-28 07:52:22.11335+00', '2023-10-28 07:52:22.11335+00', 'base64:AAAAEQ==', 'base64:n8WfLgMeRHGS2FjX0E14VQ==', riti@k.com, xyz, '{}', enabled, '2023-10-28 07:40:43.724624+00', '2023-10-28 07:40:43.724624+00', 'base64:AAAAEA==', 'base64:lx8sbJFoRFiAUhf43evegg==', balavighnesh16@gmail.com, Bala, '{}', enabled, '2023-10-28 07:12:56.659462+00', '2023-10-28 07:12:56.659462+00', 'base64:AAAADw==', 'base64:VLFWXPabTMmcxn5SFeodyQ==', api@m.com, x, '{}', enabled, '2023-10-28 06:47:11.554193+00', '2023-10-28 06:47:11.554193+00', 'base64:AAAADg==', 'base64:silpm6FsS7OE2P9jLPqCiQ==', shilvaraj2@mail.com, shilvraj, '{}', enabled, '2023-10-28 06:36:35.86808+00', '2023-10-28 06:36:35.86808+00', 'base64:AAAADQ==', 'base64:9GirshXzSPCTy+hFgjzPUA==', kaustubhsharma105@gmail.com, kaustubh, '{}', enabled, '2023-10-28 06:27:26.68797+00', '2023-10-28 06:27:26.68797+00', 'base64:AAAADA==', 'base64:nTtqX6gYT2a2fxRsxsJX3Q==', ujwal@m.com, ujwal, '{}', enabled, '2023-10-28 06:17:29.546591+00', '2023-10-28 06:17:29.546591+00', 'base64:AAAACw==', 'base64:Gl7E18GaTAOTp8lb6RhNIg==', shubhankar@m.copm, shubhankar, '{}', enabled, '2023-10-28 06:07:44.634508+00', '2023-10-28 06:07:44.634508+00', 'base64:AAAACg==', 'base64:H1UqowF9SEOT3qYIruWITg==', rafique@mail.com, rafique, '{}', enabled, '2023-10-28 05:53:53.897419+00', '2023-10-28 05:53:53.897419+00', 'base64:AAAACQ==', 'base64:33SA8f5QTG+9RDltRPfhvQ==', arjun/@ga.com, arjun, '{}', enabled, '2023-10-28 05:31:03.46229+00', '2023-10-28 05:31:03.46229+00', 'base64:AAAACA==', 'base64:TRzp5QLLQIuBCZhJpcVpRw==', swastik@m.com, swastik, '{}', enabled, '2023-10-28 04:46:14.955116+00', '2023-10-28 04:46:14.955116+00', 'base64:AAAABw==', 'base64:OestVv3FR167ufquXygKlg==', sd@s.com, Sd, '{}', enabled, '2023-10-27 19:14:32.834405+00', '2023-10-27 19:14:32.834405+00', 'base64:AAAABg==', 'base64:VEfBvg2IQAmrB2V8s8SXDw==', f@f.com, f, '{}', enabled, '2023-10-27 19:07:06.034296+00', '2023-10-27 19:07:06.034296+00', 'base64:AAAABQ==', 'base64:EFxWNUjcTruXIVpTIJA8ig==', d@gmail.com, d@gmail.com, '{}', enabled, '2023-10-27 18:32:26.837302+00', '2023-10-27 18:32:26.837302+00', 'base64:AAAAAg==', 'base64:ypCsuJnySXSAUPJYoyBQEw==', anon@example.com, Anon Doe, '{"city": "Bengaluru", "good": true, "type": "unknown"}', enabled, '2023-10-27 06:49:09.179627+00', '2023-10-27 06:49:09.179627+00', 'base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}]
          ready_for_query:
            txstatus: 84
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.712127642Z
    restimestampmock: 2023-11-03T03:03:46.714604911Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [Q]
          identifier: ClientRequest
          length: 102
          query:
            string: ROLLBACK
          msg_type: 81
          auth_type: 0
    postgresresponses:
        - header: [C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 82
                - 79
                - 76
                - 76
                - 66
                - 65
                - 67
                - 75
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.759143804Z
    restimestampmock: 2023-11-03T03:03:46.759782536Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:49.460705939Z
    restimestampmock: 2023-11-03T03:03:49.460963123Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:54.460417557Z
    restimestampmock: 2023-11-03T03:03:54.46047576Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:59.464894219Z
    restimestampmock: 2023-11-03T03:03:59.465021957Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:04.461763389Z
    restimestampmock: 2023-11-03T03:04:04.461915583Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "6"
              parameters: [[49], [], []]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAAygAIAAAABAAAAAEAAAAQHWlZPL+IQEWPpB+PFVGaeQAAABBqb2huQGV4YW1wbGUuY29tAAAACEpvaG4gRG9lAAAANHsiY2l0eSI6ICJCZW5nYWx1cnUiLCAiZ29vZCI6IHRydWUsICJ0eXBlIjogImtub3duIn0AAAALYmxvY2tsaXN0ZWQAAAAdMjAyMy0xMC0yNyAwNjo0OTowOS4xNzg0NDkrMDAAAAAcMjAyMy0xMS0wMyAwMjo1ODo0My4zMDUyOCswMEMAAAANU0VMRUNUIDEAWgAAAAVJ
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}, {_: [], row_values: ['base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}, {_: [], row_values: ['base64:AAAAAQ==', 'base64:HWlZPL+IQEWPpB+PFVGaeQ==', john@example.com, John Doe, '{"city": "Bengaluru", "good": true, "type": "known"}', blocklisted, '2023-10-27 06:49:09.178449+00', '2023-11-03 02:58:43.30528+00']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:07.056587812Z
    restimestampmock: 2023-11-03T03:04:07.056693177Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "10"
              parameters: [[123, 49, 125]]
              result_format_codes: [1, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAABuAACAAAABAAAAAEAAAGmW3sic3Vic2NyaXB0aW9uX3N0YXR1cyI6InVuc3Vic2NyaWJlZCIsInN1YnNjcmlwdGlvbl9jcmVhdGVkX2F0IjoiMjAyMy0xMC0yN1QwNjo0OTowOS4xNzg0NDkrMDA6MDAiLCJzdWJzY3JpcHRpb25fdXBkYXRlZF9hdCI6IjIwMjMtMTEtMDNUMDI6NTg6NDMuMzA1MjgrMDA6MDAiLCJzdWJzY3JpcHRpb25fbWV0YSI6e30sImlkIjoxLCJ1dWlkIjoiYzU5NzdkZGYtYmZkNC00MzhmLWFhYTEtYmFmNmZkZTQ1MGIwIiwibmFtZSI6IkRlZmF1bHQgbGlzdCIsInR5cGUiOiJwcml2YXRlIiwib3B0aW4iOiJzaW5nbGUiLCJ0YWdzIjpbInRlc3QiXSwiZGVzY3JpcHRpb24iOiIiLCJjcmVhdGVkX2F0IjoiMjAyMy0xMC0yN1QwNjo0OTowOS4xNzcxNzgrMDA6MDAiLCJ1cGRhdGVkX2F0IjoiMjAyMy0xMC0yN1QwNjo0OTowOS4xNzcxNzgrMDA6MDAifV1DAAAADVNFTEVDVCAxAFoAAAAFSQ==
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:07.058571746Z
    restimestampmock: 2023-11-03T03:04:07.058694567Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:09.4652283Z
    restimestampmock: 2023-11-03T03:04:09.465761248Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:14.462180825Z
    restimestampmock: 2023-11-03T03:04:14.462243152Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:19.462124968Z
    restimestampmock: 2023-11-03T03:04:19.462208918Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:24.460951701Z
    restimestampmock: 2023-11-03T03:04:24.461004029Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:29.466046468Z
    restimestampmock: 2023-11-03T03:04:29.466183396Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "3"
              parameters: [[54, 52, 97, 102, 50, 100, 102, 97, 45, 98, 49, 54, 52, 45, 52, 97, 57, 56, 45, 97, 56, 53, 54, 45, 100, 57, 101, 57, 52, 97, 56, 53, 55, 49, 55, 99], [115, 117, 98, 115, 114, 105, 98, 101, 114, 64, 100, 111, 109, 97, 105, 110, 46, 99, 111, 109], [84, 104, 101, 32, 83, 117, 98, 115, 99, 114, 105, 98, 101, 114], [101, 110, 97, 98, 108, 101, 100], [123, 34, 99, 105, 116, 121, 34, 58, 34, 66, 101, 110, 103, 97, 108, 117, 114, 117, 34, 44, 34, 112, 114, 111, 106, 101, 99, 116, 115, 34, 58, 51, 44, 34, 115, 116, 97, 99, 107, 34, 58, 123, 34, 108, 97, 110, 103, 117, 97, 103, 101, 115, 34, 58, 91, 34, 103, 111, 34, 44, 34, 112, 121, 116, 104, 111, 110, 34, 93, 125, 125], [123, 49, 125], [123, 125], [117, 110, 99, 111, 110, 102, 105, 114, 109, 101, 100]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", E, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAARFAAAA5lNFUlJPUgBWRVJST1IAQzIzNTA1AE1kdXBsaWNhdGUga2V5IHZhbHVlIHZpb2xhdGVzIHVuaXF1ZSBjb25zdHJhaW50ICJzdWJzY3JpYmVyc19lbWFpbF9rZXkiAERLZXkgKGVtYWlsKT0oc3Vic3JpYmVyQGRvbWFpbi5jb20pIGFscmVhZHkgZXhpc3RzLgBzcHVibGljAHRzdWJzY3JpYmVycwBuc3Vic2NyaWJlcnNfZW1haWxfa2V5AEZuYnRpbnNlcnQuYwBMNjQ5AFJfYnRfY2hlY2tfdW5pcXVlAABaAAAABUk=
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          error_response:
            severity: ERROR
            severity_unlocalized: ERROR
            code: "23505"
            message: duplicate key value violates unique constraint "subscribers_email_key"
            detail: Key (email)=(subsriber@domain.com) already exists.
            hint: ""
            position: 0
            internal_position: 0
            internal_query: ""
            where: ""
            schema_name: public
            table_name: subscribers
            column_name: ""
            data_type_name: ""
            constraint_name: subscribers_email_key
            file: nbtinsert.c
            line: 649
            routine: _bt_check_unique
            unknown_fields: {}
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:34.072510146Z
    restimestampmock: 2023-11-03T03:04:34.073581871Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:34.465240228Z
    restimestampmock: 2023-11-03T03:04:34.465344747Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:39.459957884Z
    restimestampmock: 2023-11-03T03:04:39.459991544Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:44.461527534Z
    restimestampmock: 2023-11-03T03:04:44.461628804Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "3"
              parameters: [[49, 53, 50, 52, 102, 102, 52, 55, 45, 57, 50, 97, 101, 45, 52, 100, 48, 50, 45, 97, 51, 52, 53, 45, 100, 53, 55, 57, 53, 97, 50, 102, 53, 50, 52, 50], [115, 117, 98, 115, 114, 105, 98, 101, 114, 49, 50, 51, 64, 100, 111, 109, 97, 105, 110, 46, 99, 111, 109], [84, 104, 101, 32, 83, 117, 98, 115, 99, 114, 105, 98, 101, 114], [101, 110, 97, 98, 108, 101, 100], [123, 34, 99, 105, 116, 121, 34, 58, 34, 66, 101, 110, 103, 97, 108, 117, 114, 117, 34, 44, 34, 112, 114, 111, 106, 101, 99, 116, 115, 34, 58, 51, 44, 34, 115, 116, 97, 99, 107, 34, 58, 123, 34, 108, 97, 110, 103, 117, 97, 103, 101, 115, 34, 58, 91, 34, 103, 111, 34, 44, 34, 112, 121, 116, 104, 111, 110, 34, 93, 125, 125], [123, 49, 125], [123, 125], [117, 110, 99, 111, 110, 102, 105, 114, 109, 101, 100]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", E, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAARFAAAA6VNFUlJPUgBWRVJST1IAQzIzNTA1AE1kdXBsaWNhdGUga2V5IHZhbHVlIHZpb2xhdGVzIHVuaXF1ZSBjb25zdHJhaW50ICJzdWJzY3JpYmVyc19lbWFpbF9rZXkiAERLZXkgKGVtYWlsKT0oc3Vic3JpYmVyMTIzQGRvbWFpbi5jb20pIGFscmVhZHkgZXhpc3RzLgBzcHVibGljAHRzdWJzY3JpYmVycwBuc3Vic2NyaWJlcnNfZW1haWxfa2V5AEZuYnRpbnNlcnQuYwBMNjQ5AFJfYnRfY2hlY2tfdW5pcXVlAABaAAAABUk=
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          error_response:
            severity: ERROR
            severity_unlocalized: ERROR
            code: "23505"
            message: duplicate key value violates unique constraint "subscribers_email_key"
            detail: Key (email)=(subsriber123@domain.com) already exists.
            hint: ""
            position: 0
            internal_position: 0
            internal_query: ""
            where: ""
            schema_name: public
            table_name: subscribers
            column_name: ""
            data_type_name: ""
            constraint_name: subscribers_email_key
            file: nbtinsert.c
            line: 649
            routine: _bt_check_unique
            unknown_fields: {}
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:47.232781233Z
    restimestampmock: 2023-11-03T03:04:47.232918413Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:49.469617902Z
    restimestampmock: 2023-11-03T03:04:49.469813486Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:54.462061316Z
    restimestampmock: 2023-11-03T03:04:54.462161754Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "3"
              parameters: [[50, 49, 100, 99, 48, 102, 52, 53, 45, 99, 55, 54, 49, 45, 52, 97, 98, 48, 45, 98, 99, 98, 53, 45, 55, 53, 52, 54, 57, 53, 52, 97, 55, 57, 57, 101], [115, 117, 98, 115, 114, 105, 98, 101, 114, 49, 50, 51, 52, 53, 54, 64, 100, 111, 109, 97, 105, 110, 46, 99, 111, 109], [84, 104, 101, 32, 83, 117, 98, 115, 99, 114, 105, 98, 101, 114], [101, 110, 97, 98, 108, 101, 100], [123, 34, 99, 105, 116, 121, 34, 58, 34, 66, 101, 110, 103, 97, 108, 117, 114, 117, 34, 44, 34, 112, 114, 111, 106, 101, 99, 116, 115, 34, 58, 51, 44, 34, 115, 116, 97, 99, 107, 34, 58, 123, 34, 108, 97, 110, 103, 117, 97, 103, 101, 115, 34, 58, 91, 34, 103, 111, 34, 44, 34, 112, 121, 116, 104, 111, 110, 34, 93, 125, 125], [123, 49, 125], [123, 125], [117, 110, 99, 111, 110, 102, 105, 114, 109, 101, 100]]
              result_format_codes: [1]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAADgABAAAABAAAAClDAAAADVNFTEVDVCAxAFoAAAAFSQ==
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAKQ==']}, {_: [], row_values: ['base64:AAAAKQ==']}, {_: [], row_values: ['base64:AAAAKQ==']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:54.667926629Z
    restimestampmock: 2023-11-03T03:04:54.668034523Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "6"
              parameters: [[52, 49], [], [115, 117, 98, 115, 114, 105, 98, 101, 114, 49, 50, 51, 52, 53, 54, 64, 100, 111, 109, 97, 105, 110, 46, 99, 111, 109]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAA8QAIAAAABAAAACkAAAAQIdwPRcdhSrC8tXVGlUp5ngAAABpzdWJzcmliZXIxMjM0NTZAZG9tYWluLmNvbQAAAA5UaGUgU3Vic2NyaWJlcgAAAE57ImNpdHkiOiAiQmVuZ2FsdXJ1IiwgInN0YWNrIjogeyJsYW5ndWFnZXMiOiBbImdvIiwgInB5dGhvbiJdfSwgInByb2plY3RzIjogM30AAAAHZW5hYmxlZAAAAB0yMDIzLTExLTAzIDAzOjA0OjU0LjY2MDA0MiswMAAAAB0yMDIzLTExLTAzIDAzOjA0OjU0LjY2MDA0MiswMEMAAAANU0VMRUNUIDEAWgAAAAVJ
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAKQ==', 'base64:IdwPRcdhSrC8tXVGlUp5ng==', subsriber123456@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-11-03 03:04:54.660042+00', '2023-11-03 03:04:54.660042+00']}, {_: [], row_values: ['base64:AAAAKQ==', 'base64:IdwPRcdhSrC8tXVGlUp5ng==', subsriber123456@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-11-03 03:04:54.660042+00', '2023-11-03 03:04:54.660042+00']}, {_: [], row_values: ['base64:AAAAKQ==', 'base64:IdwPRcdhSrC8tXVGlUp5ng==', subsriber123456@domain.com, The Subscriber, '{"city": "Bengaluru", "stack": {"languages": ["go", "python"]}, "projects": 3}', enabled, '2023-11-03 03:04:54.660042+00', '2023-11-03 03:04:54.660042+00']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:54.670617207Z
    restimestampmock: 2023-11-03T03:04:54.670720686Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "10"
              parameters: [[123, 52, 49, 125]]
              result_format_codes: [1, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAABuAACAAAABAAAACkAAAGmW3sic3Vic2NyaXB0aW9uX3N0YXR1cyI6InVuY29uZmlybWVkIiwic3Vic2NyaXB0aW9uX2NyZWF0ZWRfYXQiOiIyMDIzLTExLTAzVDAzOjA0OjU0LjY2MDA0MiswMDowMCIsInN1YnNjcmlwdGlvbl91cGRhdGVkX2F0IjoiMjAyMy0xMS0wM1QwMzowNDo1NC42NjAwNDIrMDA6MDAiLCJzdWJzY3JpcHRpb25fbWV0YSI6e30sImlkIjoxLCJ1dWlkIjoiYzU5NzdkZGYtYmZkNC00MzhmLWFhYTEtYmFmNmZkZTQ1MGIwIiwibmFtZSI6IkRlZmF1bHQgbGlzdCIsInR5cGUiOiJwcml2YXRlIiwib3B0aW4iOiJzaW5nbGUiLCJ0YWdzIjpbInRlc3QiXSwiZGVzY3JpcHRpb24iOiIiLCJjcmVhdGVkX2F0IjoiMjAyMy0xMC0yN1QwNjo0OTowOS4xNzcxNzgrMDA6MDAiLCJ1cGRhdGVkX2F0IjoiMjAyMy0xMC0yN1QwNjo0OTowOS4xNzcxNzgrMDA6MDAifV1DAAAADVNFTEVDVCAxAFoAAAAFSQ==
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 49
          data_row: [{_: [], row_values: ['base64:AAAAKQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-11-03T03:04:54.660042+00:00","subscription_updated_at":"2023-11-03T03:04:54.660042+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAKQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-11-03T03:04:54.660042+00:00","subscription_updated_at":"2023-11-03T03:04:54.660042+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAKQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-11-03T03:04:54.660042+00:00","subscription_updated_at":"2023-11-03T03:04:54.660042+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:54.67287204Z
    restimestampmock: 2023-11-03T03:04:54.672967396Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "8"
              parameters: [[52, 49], [], [123, 49, 125], [123, 125], [117, 110, 99, 111, 110, 102, 105, 114, 109, 101, 100], [100, 111, 117, 98, 108, 101]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:54.674386815Z
    restimestampmock: 2023-11-03T03:04:54.674436805Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:04:59.463743415Z
    restimestampmock: 2023-11-03T03:04:59.463816692Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:04.465134423Z
    restimestampmock: 2023-11-03T03:05:04.465241068Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:09.464082114Z
    restimestampmock: 2023-11-03T03:05:09.464225712Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:14.464324348Z
    restimestampmock: 2023-11-03T03:05:14.464423829Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:19.468600998Z
    restimestampmock: 2023-11-03T03:05:19.468962138Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:24.463971546Z
    restimestampmock: 2023-11-03T03:05:24.464043533Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:29.461147136Z
    restimestampmock: 2023-11-03T03:05:29.461208166Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:34.460230186Z
    restimestampmock: 2023-11-03T03:05:34.460325627Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:39.46256429Z
    restimestampmock: 2023-11-03T03:05:39.462633861Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:44.463616038Z
    restimestampmock: 2023-11-03T03:05:44.463672028Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "19"
              parameters: [[123, 49, 57, 125], [123, 125]]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 68
                - 69
                - 76
                - 69
                - 84
                - 69
                - 32
                - 49
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:47.056864268Z
    restimestampmock: 2023-11-03T03:05:47.057785565Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:49.462393501Z
    restimestampmock: 2023-11-03T03:05:49.462595424Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:54.466624139Z
    restimestampmock: 2023-11-03T03:05:54.46672358Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:05:59.465608191Z
    restimestampmock: 2023-11-03T03:05:59.465710882Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:04.463818196Z
    restimestampmock: 2023-11-03T03:06:04.463908764Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:09.46203047Z
    restimestampmock: 2023-11-03T03:06:09.462106416Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:14.46944847Z
    restimestampmock: 2023-11-03T03:06:14.469572991Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:19.462439751Z
    restimestampmock: 2023-11-03T03:06:19.462559774Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          payload: UAAAApwAV0lUSCBscyBBUyAoIAlTRUxFQ1QgQ09VTlQoKikgT1ZFUiAoKSBBUyB0b3RhbCwgbGlzdHMuKiBGUk9NIGxpc3RzIFdIRVJFIENBU0UgV0hFTiAkMSA+IDAgVEhFTiBpZCA9ICQxIFdIRU4gJDIgIT0gJycgVEhFTiB1dWlkID0gJDI6OlVVSUQgV0hFTiAkMyAhPSAnJyBUSEVOIHRvX3RzdmVjdG9yKG5hbWUpIEBAIHRvX3RzcXVlcnkgKCQzKSBFTFNFIHRydWUgRU5EIE9SREVSIEJZIGNyZWF0ZWRfYXQgZGVzYyBPRkZTRVQgJDQgTElNSVQgKENBU0UgV0hFTiAkNSA8IDEgVEhFTiBOVUxMIEVMU0UgJDUgRU5EKSApLCBjb3VudHMgQVMgKCBTRUxFQ1QgbGlzdF9pZCwgSlNPTl9PQkpFQ1RfQUdHKHN0YXR1cywgc3Vic2NyaWJlcl9jb3VudCkgQVMgc3Vic2NyaWJlcl9zdGF0dXNlcyBGUk9NICggU0VMRUNUIENPVU5UKCopIGFzIHN1YnNjcmliZXJfY291bnQsIGxpc3RfaWQsIHN0YXR1cyBGUk9NIHN1YnNjcmliZXJfbGlzdHMgV0hFUkUgKCQxID0gMCBPUiBsaXN0X2lkID0gJDEpIEdST1VQIEJZIGxpc3RfaWQsIHN0YXR1cyApIHJvdyBHUk9VUCBCWSBsaXN0X2lkICkgU0VMRUNUIGxzLiosIHN1YnNjcmliZXJfc3RhdHVzZXMgRlJPTSBscyBMRUZUIEpPSU4gY291bnRzIE9OIChjb3VudHMubGlzdF9pZCA9IGxzLmlkKSBPUkRFUiBCWSBjcmVhdGVkX2F0IGRlc2M7AAAARAAAAAZTAFMAAAAE
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: WITH ls AS ( SELECT COUNT(*) OVER () AS total, lists.* FROM lists WHERE CASE WHEN $1 > 0 THEN id = $1 WHEN $2 != '' THEN uuid = $2::UUID WHEN $3 != '' THEN to_tsvector(name) @@ to_tsquery ($3) ELSE true END ORDER BY created_at desc OFFSET $4 LIMIT (CASE WHEN $5 < 1 THEN NULL ELSE $5 END) ), counts AS ( SELECT list_id, JSON_OBJECT_AGG(status, subscriber_count) AS subscriber_statuses FROM ( SELECT COUNT(*) as subscriber_count, list_id, status FROM subscriber_lists WHERE ($1 = 0 OR list_id = $1) GROUP BY list_id, status ) row GROUP BY list_id ) SELECT ls.*, subscriber_statuses FROM ls LEFT JOIN counts ON (counts.list_id = ls.id) ORDER BY created_at desc;
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 25
                - 25
                - 20
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [116, 111, 116, 97, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [105, 100], table_oid: 16482, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16482, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16482, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16482, table_attribute_number: 4, data_type_oid: 16386, data_type_size: 4, type_modifier: -1, format: 0}, {name: [111, 112, 116, 105, 110], table_oid: 16482, table_attribute_number: 5, data_type_oid: 16394, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16482, table_attribute_number: 6, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110], table_oid: 16482, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 8, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16482, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 115, 116, 97, 116, 117, 115, 101, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:23.049162054Z
    restimestampmock: 2023-11-03T03:06:23.049893894Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - parameters: [[48], [], [], [48], [49, 48, 48]]
              result_format_codes: [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, D, D, D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAAugALAAAACAAAAAAAAAAEAAAABAAAAAQAAAAQf8U+eYc0TE6kO6iQgJuP9gAAABBzaGl2YW5pQG1haWwuY29tAAAAB3ByaXZhdGUAAAAGc2luZ2xl/////wAAAAAAAAAdMjAyMy0xMC0yOCAwNTo0NDo0MS4xOTAxODErMDAAAAAdMjAyMy0xMC0yOCAwNTo0NDo0MS4xOTAxODErMDAAAAAVeyAidW5jb25maXJtZWQiIDogMSB9RAAAALQACwAAAAgAAAAAAAAABAAAAAQAAAADAAAAED5uO/rZ0kvtoBTBZJe/3LcAAAAKUml0aWsgSmFpbgAAAAdwcml2YXRlAAAABnNpbmdsZf////8AAAAAAAAAHTIwMjMtMTAtMjcgMTk6MDY6NDQuNjgyNDM5KzAwAAAAHTIwMjMtMTAtMjcgMTk6MDY6NDQuNjgyNDM5KzAwAAAAFXsgInVuY29uZmlybWVkIiA6IDIgfUQAAAC6AAsAAAAIAAAAAAAAAAQAAAAEAAAAAgAAABCxNJtEPtBPnLyFWPKp6MyXAAAAC09wdC1pbiBsaXN0AAAABnB1YmxpYwAAAAZkb3VibGUAAAAGe3Rlc3R9AAAAAAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3Nzg1NiswMAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3Nzg1NiswMAAAABV7ICJ1bmNvbmZpcm1lZCIgOiA1IH1EAAAA0AALAAAACAAAAAAAAAAEAAAABAAAAAEAAAAQxZd937/UQ4+qobr2/eRQsAAAAAxEZWZhdWx0IGxpc3QAAAAHcHJpdmF0ZQAAAAZzaW5nbGUAAAAGe3Rlc3R9AAAAAAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3NzE3OCswMAAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE3NzE3OCswMAAAACl7ICJ1bmNvbmZpcm1lZCIgOiA3LCAidW5zdWJzY3JpYmVkIiA6IDEgfUMAAAANU0VMRUNUIDQAWgAAAAVJ
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 52
          data_row: [{_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }']}, {_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAw==', 'base64:Pm47+tnSS+2gFMFkl7/ctw==', Ritik Jain, private, single, "", "", '2023-10-27 19:06:44.682439+00', '2023-10-27 19:06:44.682439+00', '{ "unconfirmed" : 2 }']}, {_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAw==', 'base64:Pm47+tnSS+2gFMFkl7/ctw==', Ritik Jain, private, single, "", "", '2023-10-27 19:06:44.682439+00', '2023-10-27 19:06:44.682439+00', '{ "unconfirmed" : 2 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAg==', 'base64:sTSbRD7QT5y8hVjyqejMlw==', Opt-in list, public, double, '{test}', "", '2023-10-27 06:49:09.177856+00', '2023-10-27 06:49:09.177856+00', '{ "unconfirmed" : 5 }']}, {_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAw==', 'base64:Pm47+tnSS+2gFMFkl7/ctw==', Ritik Jain, private, single, "", "", '2023-10-27 19:06:44.682439+00', '2023-10-27 19:06:44.682439+00', '{ "unconfirmed" : 2 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAg==', 'base64:sTSbRD7QT5y8hVjyqejMlw==', Opt-in list, public, double, '{test}', "", '2023-10-27 06:49:09.177856+00', '2023-10-27 06:49:09.177856+00', '{ "unconfirmed" : 5 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAQ==', 'base64:xZd937/UQ4+qobr2/eRQsA==', Default list, private, single, '{test}', "", '2023-10-27 06:49:09.177178+00', '2023-10-27 06:49:09.177178+00', '{ "unconfirmed" : 7, "unsubscribed" : 1 }']}, {_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAw==', 'base64:Pm47+tnSS+2gFMFkl7/ctw==', Ritik Jain, private, single, "", "", '2023-10-27 19:06:44.682439+00', '2023-10-27 19:06:44.682439+00', '{ "unconfirmed" : 2 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAg==', 'base64:sTSbRD7QT5y8hVjyqejMlw==', Opt-in list, public, double, '{test}', "", '2023-10-27 06:49:09.177856+00', '2023-10-27 06:49:09.177856+00', '{ "unconfirmed" : 5 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAQ==', 'base64:xZd937/UQ4+qobr2/eRQsA==', Default list, private, single, '{test}', "", '2023-10-27 06:49:09.177178+00', '2023-10-27 06:49:09.177178+00', '{ "unconfirmed" : 7, "unsubscribed" : 1 }']}, {_: [], row_values: ['base64:AAAAAAAAAAQ=', 'base64:AAAABA==', 'base64:f8U+eYc0TE6kO6iQgJuP9g==', shivani@mail.com, private, single, "", "", '2023-10-28 05:44:41.190181+00', '2023-10-28 05:44:41.190181+00', '{ "unconfirmed" : 1 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAw==', 'base64:Pm47+tnSS+2gFMFkl7/ctw==', Ritik Jain, private, single, "", "", '2023-10-27 19:06:44.682439+00', '2023-10-27 19:06:44.682439+00', '{ "unconfirmed" : 2 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAg==', 'base64:sTSbRD7QT5y8hVjyqejMlw==', Opt-in list, public, double, '{test}', "", '2023-10-27 06:49:09.177856+00', '2023-10-27 06:49:09.177856+00', '{ "unconfirmed" : 5 }', 'base64:AAAAAAAAAAQ=', 'base64:AAAAAQ==', 'base64:xZd937/UQ4+qobr2/eRQsA==', Default list, private, single, '{test}', "", '2023-10-27 06:49:09.177178+00', '2023-10-27 06:49:09.177178+00', '{ "unconfirmed" : 7, "unsubscribed" : 1 }']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:23.052679655Z
    restimestampmock: 2023-11-03T03:06:23.053018517Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:24.46857911Z
    restimestampmock: 2023-11-03T03:06:24.469163849Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:29.460914725Z
    restimestampmock: 2023-11-03T03:06:29.460977381Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:34.466322792Z
    restimestampmock: 2023-11-03T03:06:34.466455104Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:39.461465437Z
    restimestampmock: 2023-11-03T03:06:39.461514096Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:44.46446524Z
    restimestampmock: 2023-11-03T03:06:44.46458893Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:49.464103301Z
    restimestampmock: 2023-11-03T03:06:49.464289814Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:54.462958856Z
    restimestampmock: 2023-11-03T03:06:54.463063798Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:06:59.465517548Z
    restimestampmock: 2023-11-03T03:06:59.465641446Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:04.465971885Z
    restimestampmock: 2023-11-03T03:07:04.466031376Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:09.464834451Z
    restimestampmock: 2023-11-03T03:07:09.464983512Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:14.466374685Z
    restimestampmock: 2023-11-03T03:07:14.466501333Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:19.46251767Z
    restimestampmock: 2023-11-03T03:07:19.462661816Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:24.466670079Z
    restimestampmock: 2023-11-03T03:07:24.466876716Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:29.466997093Z
    restimestampmock: 2023-11-03T03:07:29.467104827Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:34.467950118Z
    restimestampmock: 2023-11-03T03:07:34.46814734Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "42"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:39.459368659Z
    restimestampmock: 2023-11-03T03:07:39.459411694Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "16"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.38849285Z
    restimestampmock: 2023-11-03T03:07:44.388526887Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "17"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.389450424Z
    restimestampmock: 2023-11-03T03:07:44.389477587Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "40"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.390019219Z
    restimestampmock: 2023-11-03T03:07:44.39004284Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "53"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.390838645Z
    restimestampmock: 2023-11-03T03:07:44.390866849Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "61"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.391473972Z
    restimestampmock: 2023-11-03T03:07:44.391495511Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "2"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.392182789Z
    restimestampmock: 2023-11-03T03:07:44.392204244Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "5"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.392738127Z
    restimestampmock: 2023-11-03T03:07:44.392778997Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "10"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.393310838Z
    restimestampmock: 2023-11-03T03:07:44.393333127Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "18"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.393834556Z
    restimestampmock: 2023-11-03T03:07:44.393883674Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "37"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.394332361Z
    restimestampmock: 2023-11-03T03:07:44.394372147Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "43"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.39498781Z
    restimestampmock: 2023-11-03T03:07:44.395039012Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "66"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.395473659Z
    restimestampmock: 2023-11-03T03:07:44.395490906Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "9"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.395979712Z
    restimestampmock: 2023-11-03T03:07:44.395997252Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "38"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.396537009Z
    restimestampmock: 2023-11-03T03:07:44.396558548Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "3"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.397066518Z
    restimestampmock: 2023-11-03T03:07:44.397117927Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "20"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.397487042Z
    restimestampmock: 2023-11-03T03:07:44.397511038Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "41"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.397995512Z
    restimestampmock: 2023-11-03T03:07:44.398051129Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "60"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.398585387Z
    restimestampmock: 2023-11-03T03:07:44.398604593Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "63"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.398989788Z
    restimestampmock: 2023-11-03T03:07:44.399016201Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "34"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.3996182Z
    restimestampmock: 2023-11-03T03:07:44.399664318Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "39"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.400034391Z
    restimestampmock: 2023-11-03T03:07:44.400101673Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "54"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.400440626Z
    restimestampmock: 2023-11-03T03:07:44.400458248Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "22"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.400886563Z
    restimestampmock: 2023-11-03T03:07:44.400904394Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "4"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.401314836Z
    restimestampmock: 2023-11-03T03:07:44.40135458Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "6"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.401835471Z
    restimestampmock: 2023-11-03T03:07:44.401871799Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "27"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.402345316Z
    restimestampmock: 2023-11-03T03:07:44.402361022Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "29"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.403005223Z
    restimestampmock: 2023-11-03T03:07:44.403020137Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "30"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.403529107Z
    restimestampmock: 2023-11-03T03:07:44.403554187Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "35"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.40408682Z
    restimestampmock: 2023-11-03T03:07:44.404107484Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "36"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.404604581Z
    restimestampmock: 2023-11-03T03:07:44.404625453Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "45"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.405003775Z
    restimestampmock: 2023-11-03T03:07:44.40501644Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "49"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.405396553Z
    restimestampmock: 2023-11-03T03:07:44.405423341Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "57"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.405799996Z
    restimestampmock: 2023-11-03T03:07:44.405829283Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "62"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.406280386Z
    restimestampmock: 2023-11-03T03:07:44.406297384Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "31"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.406712659Z
    restimestampmock: 2023-11-03T03:07:44.406759861Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "44"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.407158596Z
    restimestampmock: 2023-11-03T03:07:44.407190967Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "24"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.407739806Z
    restimestampmock: 2023-11-03T03:07:44.407763053Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "50"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.408305351Z
    restimestampmock: 2023-11-03T03:07:44.408333597Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "56"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.408753455Z
    restimestampmock: 2023-11-03T03:07:44.408775577Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "59"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.409137942Z
    restimestampmock: 2023-11-03T03:07:44.409152649Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "65"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.409708487Z
    restimestampmock: 2023-11-03T03:07:44.409727651Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "15"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.410340981Z
    restimestampmock: 2023-11-03T03:07:44.410360145Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "55"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.410947229Z
    restimestampmock: 2023-11-03T03:07:44.410960144Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "11"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.411340674Z
    restimestampmock: 2023-11-03T03:07:44.411355922Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "21"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.412054032Z
    restimestampmock: 2023-11-03T03:07:44.412067196Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "25"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.412433353Z
    restimestampmock: 2023-11-03T03:07:44.412451976Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "33"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.412866417Z
    restimestampmock: 2023-11-03T03:07:44.412881998Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "47"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.413279317Z
    restimestampmock: 2023-11-03T03:07:44.413302064Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "48"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.413687385Z
    restimestampmock: 2023-11-03T03:07:44.413703383Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "8"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.413975594Z
    restimestampmock: 2023-11-03T03:07:44.413990051Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "26"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.414468441Z
    restimestampmock: 2023-11-03T03:07:44.414480065Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "28"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.415008032Z
    restimestampmock: 2023-11-03T03:07:44.415024905Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "52"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.415784339Z
    restimestampmock: 2023-11-03T03:07:44.415829958Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "58"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.416133915Z
    restimestampmock: 2023-11-03T03:07:44.416149288Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "64"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.416687421Z
    restimestampmock: 2023-11-03T03:07:44.416708459Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "32"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.417122193Z
    restimestampmock: 2023-11-03T03:07:44.417142773Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "1"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.417661158Z
    restimestampmock: 2023-11-03T03:07:44.417680572Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "12"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.418290736Z
    restimestampmock: 2023-11-03T03:07:44.418305359Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "14"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.41886678Z
    restimestampmock: 2023-11-03T03:07:44.418884028Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "7"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.419623799Z
    restimestampmock: 2023-11-03T03:07:44.41963788Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "13"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.420035449Z
    restimestampmock: 2023-11-03T03:07:44.420059112Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "19"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.42047797Z
    restimestampmock: 2023-11-03T03:07:44.420494968Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "42"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.420929531Z
    restimestampmock: 2023-11-03T03:07:44.420940863Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "46"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.42129423Z
    restimestampmock: 2023-11-03T03:07:44.421310686Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "51"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.421677968Z
    restimestampmock: 2023-11-03T03:07:44.421703672Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [C, S]
          identifier: ClientRequest
          length: 102
          close:
            object_type: 83
            name: "23"
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["3", Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.422407198Z
    restimestampmock: 2023-11-03T03:07:44.422430778Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "1"
              parameters: [[123, 51, 52, 44, 51, 49, 44, 50, 57, 44, 50, 53, 44, 50, 51, 44, 50, 50, 44, 50, 49, 44, 50, 48, 44, 49, 57, 44, 49, 55, 44, 49, 54, 44, 49, 53, 44, 49, 52, 44, 49, 51, 44, 49, 50, 44, 49, 49, 44, 49, 48, 44, 57, 44, 56, 44, 55, 44, 54, 44, 53, 44, 50, 44, 49, 125]]
              result_format_codes: [1, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: 
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 50
                - 52
          data_row: [{_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAABQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T18:32:26.837302+00:00","subscription_updated_at":"2023-10-27T18:32:26.837302+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAABQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T18:32:26.837302+00:00","subscription_updated_at":"2023-10-27T18:32:26.837302+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAAg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T06:49:09.179627+00:00","subscription_updated_at":"2023-10-27T06:49:09.179627+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAABQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T18:32:26.837302+00:00","subscription_updated_at":"2023-10-27T18:32:26.837302+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAAg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T06:49:09.179627+00:00","subscription_updated_at":"2023-10-27T06:49:09.179627+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAABQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T18:32:26.837302+00:00","subscription_updated_at":"2023-10-27T18:32:26.837302+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAAg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T06:49:09.179627+00:00","subscription_updated_at":"2023-10-27T06:49:09.179627+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}, {_: [], row_values: ['base64:AAAAIg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-31T02:55:44.80833+00:00","subscription_updated_at":"2023-10-31T02:55:44.80833+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T05:16:30.631645+00:00","subscription_updated_at":"2023-10-29T05:16:30.631645+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAHQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-29T04:21:06.53724+00:00","subscription_updated_at":"2023-10-29T04:21:06.53724+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAGQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T23:47:03.970302+00:00","subscription_updated_at":"2023-10-28T23:47:03.970302+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAFw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T10:49:37.302097+00:00","subscription_updated_at":"2023-10-28T10:49:37.302097+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAFg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:37:51.115157+00:00","subscription_updated_at":"2023-10-28T08:37:51.115157+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAAFQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:25:12.805493+00:00","subscription_updated_at":"2023-10-28T08:25:12.805493+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAFA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T08:04:46.290153+00:00","subscription_updated_at":"2023-10-28T08:04:46.290153+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAEw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T07:52:22.11335+00:00","subscription_updated_at":"2023-10-28T07:52:22.11335+00:00","subscription_meta":{},"id":4,"uuid":"7fc53e79-8734-4c4e-a43b-a890809b8ff6","name":"shivani@mail.com","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-28T05:44:41.190181+00:00","updated_at":"2023-10-28T05:44:41.190181+00:00"}]', 'base64:AAAAEQ==', '[]', 'base64:AAAAEA==', '[]', 'base64:AAAADw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T06:47:11.554193+00:00","subscription_updated_at":"2023-10-28T06:47:11.554193+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAADg==', '[]', 'base64:AAAADQ==', '[]', 'base64:AAAADA==', '[]', 'base64:AAAACw==', '[]', 'base64:AAAACg==', '[]', 'base64:AAAACQ==', '[]', 'base64:AAAACA==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-28T04:46:14.955116+00:00","subscription_updated_at":"2023-10-28T04:46:14.955116+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAABw==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:14:32.834405+00:00","subscription_updated_at":"2023-10-27T19:14:32.834405+00:00","subscription_meta":{},"id":3,"uuid":"3e6e3bfa-d9d2-4bed-a014-c16497bfdcb7","name":"Ritik Jain","type":"private","optin":"single","tags":null,"description":"","created_at":"2023-10-27T19:06:44.682439+00:00","updated_at":"2023-10-27T19:06:44.682439+00:00"}]', 'base64:AAAABg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T19:07:06.034296+00:00","subscription_updated_at":"2023-10-27T19:07:06.034296+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAABQ==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T18:32:26.837302+00:00","subscription_updated_at":"2023-10-27T18:32:26.837302+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]', 'base64:AAAAAg==', '[{"subscription_status":"unconfirmed","subscription_created_at":"2023-10-27T06:49:09.179627+00:00","subscription_updated_at":"2023-10-27T06:49:09.179627+00:00","subscription_meta":{},"id":2,"uuid":"b1349b44-3ed0-4f9c-bc85-58f2a9e8cc97","name":"Opt-in list","type":"public","optin":"double","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177856+00:00","updated_at":"2023-10-27T06:49:09.177856+00:00"}]', 'base64:AAAAAQ==', '[{"subscription_status":"unsubscribed","subscription_created_at":"2023-10-27T06:49:09.178449+00:00","subscription_updated_at":"2023-11-03T02:58:43.30528+00:00","subscription_meta":{},"id":1,"uuid":"c5977ddf-bfd4-438f-aaa1-baf6fde450b0","name":"Default list","type":"private","optin":"single","tags":["test"],"description":"","created_at":"2023-10-27T06:49:09.177178+00:00","updated_at":"2023-10-27T06:49:09.177178+00:00"}]']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:03:46.730548926Z
    restimestampmock: 2023-11-03T03:03:46.731843555Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "2"
          parse:
            - name: "2"
              query: WITH camps AS ( SELECT campaigns.*, COALESCE(templates.body, (SELECT body FROM templates WHERE is_default = true LIMIT 1)) AS template_body FROM campaigns LEFT JOIN templates ON (templates.id = campaigns.template_id) WHERE (status='running' OR (status='scheduled' AND NOW() >= campaigns.send_at)) AND NOT(campaigns.id = ANY($1::INT[])) ), campLists AS ( SELECT lists.id AS list_id, campaign_id, optin FROM lists INNER JOIN campaign_lists ON (campaign_lists.list_id = lists.id) WHERE campaign_lists.campaign_id = ANY(SELECT id FROM camps) ), campMedia AS ( SELECT campaign_id, ARRAY_AGG(campaign_media.media_id)::INT[] AS media_id FROM campaign_media WHERE campaign_id = ANY(SELECT id FROM camps) AND media_id IS NOT NULL GROUP BY campaign_id ), counts AS ( SELECT id AS campaign_id, COUNT(DISTINCT(subscriber_lists.subscriber_id)) AS to_send, COALESCE(MAX(subscriber_lists.subscriber_id), 0) AS max_subscriber_id FROM camps LEFT JOIN campLists ON (campLists.campaign_id = camps.id) LEFT JOIN subscriber_lists ON ( subscriber_lists.list_id = campLists.list_id AND (CASE WHEN camps.type = 'optin' THEN subscriber_lists.status = 'unconfirmed' AND campLists.optin = 'double' WHEN campLists.optin = 'double' THEN subscriber_lists.status = 'confirmed' ELSE subscriber_lists.status != 'unsubscribed' END) ) GROUP BY camps.id ), u AS ( UPDATE campaigns AS ca SET to_send = co.to_send, status = (CASE WHEN status != 'running' THEN 'running' ELSE status END), max_subscriber_id = co.max_subscriber_id, started_at=(CASE WHEN ca.started_at IS NULL THEN NOW() ELSE ca.started_at END) FROM (SELECT * FROM counts) co WHERE ca.id = co.campaign_id ) SELECT camps.*, campMedia.media_id FROM camps LEFT JOIN campMedia ON (campMedia.campaign_id = camps.id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [109, 97, 120, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 18, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [108, 97, 115, 116, 95, 115, 117, 98, 115, 99, 114, 105, 98, 101, 114, 95, 105, 100], table_oid: 16540, table_attribute_number: 19, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 98, 111, 100, 121], table_oid: 0, table_attribute_number: 0, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 100, 105, 97, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 1007, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.484516283Z
    restimestampmock: 2023-11-03T03:07:44.484712256Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "2"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:44.490656043Z
    restimestampmock: 2023-11-03T03:07:44.490806022Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "2"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:49.463750056Z
    restimestampmock: 2023-11-03T03:07:49.463840585Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "2"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:54.466786656Z
    restimestampmock: 2023-11-03T03:07:54.466917388Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "2"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:07:59.463415657Z
    restimestampmock: 2023-11-03T03:07:59.463487314Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          payload: UAAAA04AU0VMRUNUICBjLmlkLCBjLnV1aWQsIGMubmFtZSwgYy5zdWJqZWN0LCBjLmZyb21fZW1haWwsIGMubWVzc2VuZ2VyLCBjLnN0YXJ0ZWRfYXQsIGMudG9fc2VuZCwgYy5zZW50LCBjLnR5cGUsIGMuYm9keSwgYy5hbHRib2R5LCBjLnNlbmRfYXQsIGMuaGVhZGVycywgYy5zdGF0dXMsIGMuY29udGVudF90eXBlLCBjLnRhZ3MsIGMudGVtcGxhdGVfaWQsIGMuYXJjaGl2ZSwgYy5hcmNoaXZlX3RlbXBsYXRlX2lkLCBjLmFyY2hpdmVfbWV0YSwgYy5jcmVhdGVkX2F0LCBjLnVwZGF0ZWRfYXQsIENPVU5UKCopIE9WRVIgKCkgQVMgdG90YWwsICggU0VMRUNUIENPQUxFU0NFKEFSUkFZX1RPX0pTT04oQVJSQVlfQUdHKGwpKSwgJ1tdJykgRlJPTSAoIFNFTEVDVCBDT0FMRVNDRShjYW1wYWlnbl9saXN0cy5saXN0X2lkLCAwKSBBUyBpZCwgY2FtcGFpZ25fbGlzdHMubGlzdF9uYW1lIEFTIG5hbWUgRlJPTSBjYW1wYWlnbl9saXN0cyBXSEVSRSBjYW1wYWlnbl9saXN0cy5jYW1wYWlnbl9pZCA9IGMuaWQgKSBsICkgQVMgbGlzdHMgRlJPTSBjYW1wYWlnbnMgYyBXSEVSRSAoJDEgPSAwIE9SIGlkID0gJDEpIEFORCBzdGF0dXM9QU5ZKENBU0UgV0hFTiBDQVJESU5BTElUWSgkMjo6Y2FtcGFpZ25fc3RhdHVzW10pICE9IDAgVEhFTiAkMjo6Y2FtcGFpZ25fc3RhdHVzW10gRUxTRSBBUlJBWVtzdGF0dXNdIEVORCkgQU5EICgkMyA9ICcnIE9SIFRPX1RTVkVDVE9SKENPTkNBVChuYW1lLCAnICcsIHN1YmplY3QpKSBAQCBUT19UU1FVRVJZKCQzKSkgT1JERVIgQlkgY3JlYXRlZF9hdCBkZXNjIE9GRlNFVCAkNCBMSU1JVCAoQ0FTRSBXSEVOICQ1IDwgMSBUSEVOIE5VTEwgRUxTRSAkNSBFTkQpOwAAAEQAAAAGUwBTAAAABA==
          describe:
            object_type: 83
            name: ""
          parse:
            - name: ""
              query: SELECT c.id, c.uuid, c.name, c.subject, c.from_email, c.messenger, c.started_at, c.to_send, c.sent, c.type, c.body, c.altbody, c.send_at, c.headers, c.status, c.content_type, c.tags, c.template_id, c.archive, c.archive_template_id, c.archive_meta, c.created_at, c.updated_at, COUNT(*) OVER () AS total, ( SELECT COALESCE(ARRAY_TO_JSON(ARRAY_AGG(l)), '[]') FROM ( SELECT COALESCE(campaign_lists.list_id, 0) AS id, campaign_lists.list_name AS name FROM campaign_lists WHERE campaign_lists.campaign_id = c.id ) l ) AS lists FROM campaigns c WHERE ($1 = 0 OR id = $1) AND status=ANY(CASE WHEN CARDINALITY($2::campaign_status[]) != 0 THEN $2::campaign_status[] ELSE ARRAY[status] END) AND ($3 = '' OR TO_TSVECTOR(CONCAT(name, ' ', subject)) @@ TO_TSQUERY($3)) ORDER BY created_at desc OFFSET $4 LIMIT (CASE WHEN $5 < 1 THEN NULL ELSE $5 END);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 23
                - 16415
                - 25
                - 20
                - 23
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [105, 100], table_oid: 16540, table_attribute_number: 1, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [117, 117, 105, 100], table_oid: 16540, table_attribute_number: 2, data_type_oid: 2950, data_type_size: 16, type_modifier: -1, format: 0}, {name: [110, 97, 109, 101], table_oid: 16540, table_attribute_number: 3, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 117, 98, 106, 101, 99, 116], table_oid: 16540, table_attribute_number: 4, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [102, 114, 111, 109, 95, 101, 109, 97, 105, 108], table_oid: 16540, table_attribute_number: 5, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 115, 115, 101, 110, 103, 101, 114], table_oid: 16540, table_attribute_number: 14, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 114, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 23, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 111, 95, 115, 101, 110, 100], table_oid: 16540, table_attribute_number: 16, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [115, 101, 110, 116], table_oid: 16540, table_attribute_number: 17, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 121, 112, 101], table_oid: 16540, table_attribute_number: 13, data_type_oid: 16430, data_type_size: 4, type_modifier: -1, format: 0}, {name: [98, 111, 100, 121], table_oid: 16540, table_attribute_number: 6, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [97, 108, 116, 98, 111, 100, 121], table_oid: 16540, table_attribute_number: 7, data_type_oid: 25, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 101, 110, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 9, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [104, 101, 97, 100, 101, 114, 115], table_oid: 16540, table_attribute_number: 10, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [115, 116, 97, 116, 117, 115], table_oid: 16540, table_attribute_number: 11, data_type_oid: 16416, data_type_size: 4, type_modifier: -1, format: 0}, {name: [99, 111, 110, 116, 101, 110, 116, 95, 116, 121, 112, 101], table_oid: 16540, table_attribute_number: 8, data_type_oid: 16436, data_type_size: 4, type_modifier: -1, format: 0}, {name: [116, 97, 103, 115], table_oid: 16540, table_attribute_number: 12, data_type_oid: 1015, data_type_size: -1, type_modifier: 104, format: 0}, {name: [116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 15, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101], table_oid: 16540, table_attribute_number: 20, data_type_oid: 16, data_type_size: 1, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 116, 101, 109, 112, 108, 97, 116, 101, 95, 105, 100], table_oid: 16540, table_attribute_number: 21, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [97, 114, 99, 104, 105, 118, 101, 95, 109, 101, 116, 97], table_oid: 16540, table_attribute_number: 22, data_type_oid: 3802, data_type_size: -1, type_modifier: -1, format: 0}, {name: [99, 114, 101, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 24, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [117, 112, 100, 97, 116, 101, 100, 95, 97, 116], table_oid: 16540, table_attribute_number: 25, data_type_oid: 1184, data_type_size: 8, type_modifier: -1, format: 0}, {name: [116, 111, 116, 97, 108], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:08:01.837367201Z
    restimestampmock: 2023-11-03T03:08:01.83749235Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - parameters: [[48], [123, 125], [], [48], [49, 48, 48]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, D, D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAABVQAZAAAABAAAAAMAAAAQCq2/jrTVTOGcPDAIDCq7pAAAAA1UZXN0IGNhbXBhaWduAAAADEhlbGxvLCB3b3JsZAAAAChsaXN0bW9uayA8bm9yZXBseUBsaXN0bW9uay55b3Vyc2l0ZS5jb20+AAAABWVtYWls/////wAAAAQAAAAFAAAABAAAAAAAAAAHcmVndWxhcgAAAAD//////////wAAAAJbXQAAAAVkcmFmdAAAAAhyaWNodGV4dAAAAAZ7dGVzdH0AAAAEAAAAAQAAAAFmAAAABAAAAAEAAAACe30AAAAdMjAyMy0xMC0yOSAwNToyMTowMC43MjUzMjErMDAAAAAdMjAyMy0xMC0yOSAwNToyMTowMC43MjUzMjErMDAAAAAIAAAAAAAAAAMAAAAgW3siaWQiOjEsIm5hbWUiOiJEZWZhdWx0IGxpc3QifV1EAAABPwAZAAAABAAAAAIAAAAQcx57WA57S8OXOBRqdA4VWQAAAAVyaXRpawAAAAVyaXRpawAAAChsaXN0bW9uayA8bm9yZXBseUBsaXN0bW9uay55b3Vyc2l0ZS5jb20+AAAABWVtYWls/////wAAAAQAAAAAAAAABAAAAAAAAAAHcmVndWxhcgAAAAD//////////wAAAAJbXQAAAAVkcmFmdAAAAAhyaWNodGV4dP////8AAAAEAAAAAQAAAAFmAAAABAAAAAEAAAACe30AAAAdMjAyMy0xMC0yNyAxOToyOTo1Ny45NzI4NjYrMDAAAAAdMjAyMy0xMC0yNyAxOTozMDowMC4zNjAxMDMrMDAAAAAIAAAAAAAAAAMAAAAfW3siaWQiOjIsIm5hbWUiOiJPcHQtaW4gbGlzdCJ9XUQAAAPCABkAAAAEAAAAAQAAABBOAViNSPBOTYrl7XU7BjlgAAAADVRlc3QgY2FtcGFpZ24AAAATV2VsY29tZSB0byBsaXN0bW9uawAAAB9ObyBSZXBseSA8bm9yZXBseUB5b3Vyc2l0ZS5jb20+AAAABWVtYWls/////wAAAAQAAAAAAAAABAAAAAAAAAAHcmVndWxhcgAAAmY8aDM+SGkge3sgLlN1YnNjcmliZXIuRmlyc3ROYW1lIH19ITwvaDM+CgkJPHA+VGhpcyBpcyBhIHRlc3QgZS1tYWlsIGNhbXBhaWduLiBZb3VyIHNlY29uZCBuYW1lIGlzIHt7IC5TdWJzY3JpYmVyLkxhc3ROYW1lIH19IGFuZCB5b3UgYXJlIGZyb20ge3sgLlN1YnNjcmliZXIuQXR0cmlicy5jaXR5IH19LjwvcD4KCQk8cD5IZXJlIGlzIGEgPGEgaHJlZj0iaHR0cHM6Ly9saXN0bW9uay5hcHBAVHJhY2tMaW5rIj50cmFja2VkIGxpbms8L2E+LjwvcD4KCQk8cD5Vc2UgdGhlIGxpbmsgaWNvbiBpbiB0aGUgZWRpdG9yIHRvb2xiYXIgb3Igd2hlbiB3cml0aW5nIHJhdyBIVE1MIG9yIE1hcmtkb3duLAoJCQlzaW1wbHkgc3VmZml4IEBUcmFja0xpbmsgdG8gdGhlIGVuZCBvZiBhIFVSTCB0byB0dXJuIGl0IGludG8gYSB0cmFja2luZyBsaW5rLiBFeGFtcGxlOjwvcD4KCQk8cHJlPiZsdDthIGhyZWY9JnF1b3Q7aHR0cHM6LyZ6d25qOy9saXN0bW9uay5hcHAmIzA2NDtUcmFja0xpbmsmcXVvdDsmZ3Q7Jmx0Oy9hJmd0OzwvcHJlPgoJCTxwPkZvciBoZWxwLCByZWZlciB0byB0aGUgPGEgaHJlZj0iaHR0cHM6Ly9saXN0bW9uay5hcHAvZG9jcyI+ZG9jdW1lbnRhdGlvbjwvYT4uPC9wPgoJCf//////////AAAAAltdAAAABWRyYWZ0AAAACHJpY2h0ZXh0AAAAD3t0ZXN0LWNhbXBhaWdufQAAAAQAAAABAAAAAWYAAAAEAAAAAgAAAAJ7fQAAAB0yMDIzLTEwLTI3IDA2OjQ5OjA5LjE4MTk5NSswMAAAAB0yMDIzLTEwLTI3IDE5OjI5OjQxLjEyNTc5NCswMAAAAAgAAAAAAAAAAwAAACBbeyJpZCI6MSwibmFtZSI6IkRlZmF1bHQgbGlzdCJ9XUMAAAANU0VMRUNUIDMAWgAAAAVJ
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 51
          data_row: [{_: [], row_values: ['base64:AAAAAw==', 'base64:Cq2/jrTVTOGcPDAIDCq7pA==', Test campaign, 'Hello, world', listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAABQ==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, '{test}', 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-29 05:21:00.725321+00', '2023-10-29 05:21:00.725321+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:Cq2/jrTVTOGcPDAIDCq7pA==', Test campaign, 'Hello, world', listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAABQ==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, '{test}', 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-29 05:21:00.725321+00', '2023-10-29 05:21:00.725321+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]', 'base64:AAAAAg==', 'base64:cx57WA57S8OXOBRqdA4VWQ==', ritik, ritik, listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, "", 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-27 19:29:57.972866+00', '2023-10-27 19:30:00.360103+00', 'base64:AAAAAAAAAAM=', '[{"id":2,"name":"Opt-in list"}]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:Cq2/jrTVTOGcPDAIDCq7pA==', Test campaign, 'Hello, world', listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAABQ==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, '{test}', 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-29 05:21:00.725321+00', '2023-10-29 05:21:00.725321+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]', 'base64:AAAAAg==', 'base64:cx57WA57S8OXOBRqdA4VWQ==', ritik, ritik, listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, "", 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-27 19:29:57.972866+00', '2023-10-27 19:30:00.360103+00', 'base64:AAAAAAAAAAM=', '[{"id":2,"name":"Opt-in list"}]', 'base64:AAAAAQ==', 'base64:TgFYjUjwTk2K5e11OwY5YA==', Test campaign, Welcome to listmonk, No Reply <noreply@yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, 'base64:PGgzPkhpIHt7IC5TdWJzY3JpYmVyLkZpcnN0TmFtZSB9fSE8L2gzPgoJCTxwPlRoaXMgaXMgYSB0ZXN0IGUtbWFpbCBjYW1wYWlnbi4gWW91ciBzZWNvbmQgbmFtZSBpcyB7eyAuU3Vic2NyaWJlci5MYXN0TmFtZSB9fSBhbmQgeW91IGFyZSBmcm9tIHt7IC5TdWJzY3JpYmVyLkF0dHJpYnMuY2l0eSB9fS48L3A+CgkJPHA+SGVyZSBpcyBhIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwQFRyYWNrTGluayI+dHJhY2tlZCBsaW5rPC9hPi48L3A+CgkJPHA+VXNlIHRoZSBsaW5rIGljb24gaW4gdGhlIGVkaXRvciB0b29sYmFyIG9yIHdoZW4gd3JpdGluZyByYXcgSFRNTCBvciBNYXJrZG93biwKCQkJc2ltcGx5IHN1ZmZpeCBAVHJhY2tMaW5rIHRvIHRoZSBlbmQgb2YgYSBVUkwgdG8gdHVybiBpdCBpbnRvIGEgdHJhY2tpbmcgbGluay4gRXhhbXBsZTo8L3A+CgkJPHByZT4mbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8menduajsvbGlzdG1vbmsuYXBwJiMwNjQ7VHJhY2tMaW5rJnF1b3Q7Jmd0OyZsdDsvYSZndDs8L3ByZT4KCQk8cD5Gb3IgaGVscCwgcmVmZXIgdG8gdGhlIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwL2RvY3MiPmRvY3VtZW50YXRpb248L2E+LjwvcD4KCQk=', "", "", '[]', draft, richtext, '{test-campaign}', 'base64:AAAAAQ==', f, 'base64:AAAAAg==', '{}', '2023-10-27 06:49:09.181995+00', '2023-10-27 19:29:41.125794+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:Cq2/jrTVTOGcPDAIDCq7pA==', Test campaign, 'Hello, world', listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAABQ==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, '{test}', 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-29 05:21:00.725321+00', '2023-10-29 05:21:00.725321+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]', 'base64:AAAAAg==', 'base64:cx57WA57S8OXOBRqdA4VWQ==', ritik, ritik, listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, "", 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-27 19:29:57.972866+00', '2023-10-27 19:30:00.360103+00', 'base64:AAAAAAAAAAM=', '[{"id":2,"name":"Opt-in list"}]', 'base64:AAAAAQ==', 'base64:TgFYjUjwTk2K5e11OwY5YA==', Test campaign, Welcome to listmonk, No Reply <noreply@yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, 'base64:PGgzPkhpIHt7IC5TdWJzY3JpYmVyLkZpcnN0TmFtZSB9fSE8L2gzPgoJCTxwPlRoaXMgaXMgYSB0ZXN0IGUtbWFpbCBjYW1wYWlnbi4gWW91ciBzZWNvbmQgbmFtZSBpcyB7eyAuU3Vic2NyaWJlci5MYXN0TmFtZSB9fSBhbmQgeW91IGFyZSBmcm9tIHt7IC5TdWJzY3JpYmVyLkF0dHJpYnMuY2l0eSB9fS48L3A+CgkJPHA+SGVyZSBpcyBhIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwQFRyYWNrTGluayI+dHJhY2tlZCBsaW5rPC9hPi48L3A+CgkJPHA+VXNlIHRoZSBsaW5rIGljb24gaW4gdGhlIGVkaXRvciB0b29sYmFyIG9yIHdoZW4gd3JpdGluZyByYXcgSFRNTCBvciBNYXJrZG93biwKCQkJc2ltcGx5IHN1ZmZpeCBAVHJhY2tMaW5rIHRvIHRoZSBlbmQgb2YgYSBVUkwgdG8gdHVybiBpdCBpbnRvIGEgdHJhY2tpbmcgbGluay4gRXhhbXBsZTo8L3A+CgkJPHByZT4mbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8menduajsvbGlzdG1vbmsuYXBwJiMwNjQ7VHJhY2tMaW5rJnF1b3Q7Jmd0OyZsdDsvYSZndDs8L3ByZT4KCQk8cD5Gb3IgaGVscCwgcmVmZXIgdG8gdGhlIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwL2RvY3MiPmRvY3VtZW50YXRpb248L2E+LjwvcD4KCQk=', "", "", '[]', draft, richtext, '{test-campaign}', 'base64:AAAAAQ==', f, 'base64:AAAAAg==', '{}', '2023-10-27 06:49:09.181995+00', '2023-10-27 19:29:41.125794+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:Cq2/jrTVTOGcPDAIDCq7pA==', Test campaign, 'Hello, world', listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAABQ==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, '{test}', 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-29 05:21:00.725321+00', '2023-10-29 05:21:00.725321+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]', 'base64:AAAAAg==', 'base64:cx57WA57S8OXOBRqdA4VWQ==', ritik, ritik, listmonk <noreply@listmonk.yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, "", "", "", '[]', draft, richtext, "", 'base64:AAAAAQ==', f, 'base64:AAAAAQ==', '{}', '2023-10-27 19:29:57.972866+00', '2023-10-27 19:30:00.360103+00', 'base64:AAAAAAAAAAM=', '[{"id":2,"name":"Opt-in list"}]', 'base64:AAAAAQ==', 'base64:TgFYjUjwTk2K5e11OwY5YA==', Test campaign, Welcome to listmonk, No Reply <noreply@yoursite.com>, email, "", 'base64:AAAAAA==', 'base64:AAAAAA==', regular, 'base64:PGgzPkhpIHt7IC5TdWJzY3JpYmVyLkZpcnN0TmFtZSB9fSE8L2gzPgoJCTxwPlRoaXMgaXMgYSB0ZXN0IGUtbWFpbCBjYW1wYWlnbi4gWW91ciBzZWNvbmQgbmFtZSBpcyB7eyAuU3Vic2NyaWJlci5MYXN0TmFtZSB9fSBhbmQgeW91IGFyZSBmcm9tIHt7IC5TdWJzY3JpYmVyLkF0dHJpYnMuY2l0eSB9fS48L3A+CgkJPHA+SGVyZSBpcyBhIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwQFRyYWNrTGluayI+dHJhY2tlZCBsaW5rPC9hPi48L3A+CgkJPHA+VXNlIHRoZSBsaW5rIGljb24gaW4gdGhlIGVkaXRvciB0b29sYmFyIG9yIHdoZW4gd3JpdGluZyByYXcgSFRNTCBvciBNYXJrZG93biwKCQkJc2ltcGx5IHN1ZmZpeCBAVHJhY2tMaW5rIHRvIHRoZSBlbmQgb2YgYSBVUkwgdG8gdHVybiBpdCBpbnRvIGEgdHJhY2tpbmcgbGluay4gRXhhbXBsZTo8L3A+CgkJPHByZT4mbHQ7YSBocmVmPSZxdW90O2h0dHBzOi8menduajsvbGlzdG1vbmsuYXBwJiMwNjQ7VHJhY2tMaW5rJnF1b3Q7Jmd0OyZsdDsvYSZndDs8L3ByZT4KCQk8cD5Gb3IgaGVscCwgcmVmZXIgdG8gdGhlIDxhIGhyZWY9Imh0dHBzOi8vbGlzdG1vbmsuYXBwL2RvY3MiPmRvY3VtZW50YXRpb248L2E+LjwvcD4KCQk=', "", "", '[]', draft, richtext, '{test-campaign}', 'base64:AAAAAQ==', f, 'base64:AAAAAg==', '{}', '2023-10-27 06:49:09.181995+00', '2023-10-27 19:29:41.125794+00', 'base64:AAAAAAAAAAM=', '[{"id":1,"name":"Default list"}]']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:08:01.842106338Z
    restimestampmock: 2023-11-03T03:08:01.842435792Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [P, D, S]
          identifier: ClientRequest
          length: 102
          describe:
            object_type: 83
            name: "3"
          parse:
            - name: "3"
              query: WITH lists AS ( SELECT campaign_id, JSON_AGG(JSON_BUILD_OBJECT('id', list_id, 'name', list_name)) AS lists FROM campaign_lists WHERE campaign_id = ANY($1) GROUP BY campaign_id ), media AS ( SELECT campaign_id, JSON_AGG(JSON_BUILD_OBJECT('id', media_id, 'filename', filename)) AS media FROM campaign_media WHERE campaign_id = ANY($1) GROUP BY campaign_id ), views AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM campaign_views WHERE campaign_id = ANY($1) GROUP BY campaign_id ), clicks AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM link_clicks WHERE campaign_id = ANY($1) GROUP BY campaign_id ), bounces AS ( SELECT campaign_id, COUNT(campaign_id) as num FROM bounces WHERE campaign_id = ANY($1) GROUP BY campaign_id ) SELECT id as campaign_id, COALESCE(v.num, 0) AS views, COALESCE(c.num, 0) AS clicks, COALESCE(b.num, 0) AS bounces, COALESCE(l.lists, '[]') AS lists, COALESCE(m.media, '[]') AS media FROM (SELECT id FROM UNNEST($1) AS id) x LEFT JOIN lists AS l ON (l.campaign_id = id) LEFT JOIN media AS m ON (m.campaign_id = id) LEFT JOIN views AS v ON (v.campaign_id = id) LEFT JOIN clicks AS c ON (c.campaign_id = id) LEFT JOIN bounces AS b ON (b.campaign_id = id) ORDER BY ARRAY_POSITION($1, id);
              parameter_oids: []
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["1", t, T, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          parameter_description:
            parameteroids:
                - 1007
          ready_for_query:
            txstatus: 73
          row_description: {fields: [{name: [99, 97, 109, 112, 97, 105, 103, 110, 95, 105, 100], table_oid: 0, table_attribute_number: 0, data_type_oid: 23, data_type_size: 4, type_modifier: -1, format: 0}, {name: [118, 105, 101, 119, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [99, 108, 105, 99, 107, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [98, 111, 117, 110, 99, 101, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 20, data_type_size: 8, type_modifier: -1, format: 0}, {name: [108, 105, 115, 116, 115], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}, {name: [109, 101, 100, 105, 97], table_oid: 0, table_attribute_number: 0, data_type_oid: 114, data_type_size: -1, type_modifier: -1, format: 0}]}
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:08:01.846727783Z
    restimestampmock: 2023-11-03T03:08:01.846797607Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "3"
              parameters: [[123, 51, 44, 50, 44, 49, 125]]
              result_format_codes: [1, 1, 1, 1, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", D, D, D, C, Z]
          identifier: ServerResponse
          length: 102
          payload: MgAAAAREAAAAYQAGAAAABAAAAAMAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAlW3siaWQiIDogMSwgIm5hbWUiIDogIkRlZmF1bHQgbGlzdCJ9XQAAAAJbXUQAAABgAAYAAAAEAAAAAgAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAAAAAACRbeyJpZCIgOiAyLCAibmFtZSIgOiAiT3B0LWluIGxpc3QifV0AAAACW11EAAAAYQAGAAAABAAAAAEAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAlW3siaWQiIDogMSwgIm5hbWUiIDogIkRlZmF1bHQgbGlzdCJ9XQAAAAJbXUMAAAANU0VMRUNUIDMAWgAAAAVJ
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 51
          data_row: [{_: [], row_values: ['base64:AAAAAw==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]', 'base64:AAAAAg==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 2, "name" : "Opt-in list"}]', '[]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]', 'base64:AAAAAg==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 2, "name" : "Opt-in list"}]', '[]', 'base64:AAAAAQ==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]', 'base64:AAAAAg==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 2, "name" : "Opt-in list"}]', '[]', 'base64:AAAAAQ==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]']}, {_: [], row_values: ['base64:AAAAAw==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]', 'base64:AAAAAg==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 2, "name" : "Opt-in list"}]', '[]', 'base64:AAAAAQ==', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', 'base64:AAAAAAAAAAA=', '[{"id" : 1, "name" : "Default list"}]', '[]']}]
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:08:01.850120023Z
    restimestampmock: 2023-11-03T03:08:01.850330869Z
---
version: api.keploy.io/v1beta2
kind: Postgres
name: mocks
spec:
    metadata: {}
    postgresrequests:
        - header: [B, E, S]
          identifier: ClientRequest
          length: 102
          bind:
            - prepared_statement: "2"
              parameters: [[123, 125]]
              result_format_codes: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
          execute:
            - {}
          msg_type: 83
          auth_type: 0
    postgresresponses:
        - header: ["2", C, Z]
          identifier: ServerResponse
          length: 102
          authentication_md5_password:
            salt:
                - 0
                - 0
                - 0
                - 0
          command_complete:
            - command_tag:
                - 83
                - 69
                - 76
                - 69
                - 67
                - 84
                - 32
                - 48
          ready_for_query:
            txstatus: 73
          msg_type: 90
          auth_type: 0
    reqtimestampmock: 2023-11-03T03:08:04.466080517Z
    restimestampmock: 2023-11-03T03:08:04.466206083Z
